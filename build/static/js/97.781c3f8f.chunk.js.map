{"version":3,"file":"static/js/97.781c3f8f.chunk.js","mappings":"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","sources":["pages/sample/Special/SpecialPostEdit.jsx","../node_modules/antd/es/col/index.js"],"sourcesContent":["import React, {useEffect,  useState} from 'react';\nimport {Button, Col, Form, message, Row, Upload,  Input} from \"antd\";\nimport {useMutation, useQuery} from \"react-query\";\nimport apiService from \"../../../@crema/services/apis/api\";\nimport {AppLoader} from \"../../../@crema\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {EDIT_DATA} from \"../../../shared/constants/ActionTypes\";\nimport ImgCrop from \"antd-img-crop\";\n\n\nconst initialValueForm = {\n    image_uz: \"\",\n    image_ru: \"\",\n    title_ru: \"\",\n    title_uz: \"\",\n\n\n};\n\n\nconst SpecialPostEdit = () => {\n\n    const [form] = Form.useForm();\n    const navigate = useNavigate()\n    const {editId} = useSelector(state => state.editData)\n    const dispatch = useDispatch()\n\n\n    const [fileListPropsUz, setFileListPropsUz] = useState([]);\n    const [fileListPropsRu, setFileListPropsRu] = useState([]);\n\n\n    // query-special\n    const {\n        mutate: postSpecialMutate,\n        data: postSpecial,\n        isLoading: postSpecialLoading,\n        isSuccess: postSpecialSuccess,\n    } = useMutation(({url, data}) => apiService.postData(url, data), {\n        onSuccess: () => {\n\n            message.success('Success')\n        },\n        onError: (error) => {\n            for (let obj in error.response.data) {\n                message.error(`${obj}: ${error.response.data[obj][0]}`)\n            }\n        }\n    });\n\n\n\n    // query-edit\n    const {\n        isLoading: editSpecialLoading,\n        data: editSpecialData,\n        refetch: editSpecialRefetch,\n        isSuccess: editSpecialSuccess,\n    } = useQuery([\"edit-special\", editId], () => apiService.getDataByID(\"products/special\", editId), {\n        enabled: false\n    });\n    // put-query\n    const {\n        mutate: putSpecial,\n        isLoading: putSpecialLoading,\n        data: putData,\n        isSuccess: putSpecialSuccess\n    } = useMutation(({\n                         url,\n                         data,\n                         id\n                     }) => apiService.editData(url, data, id), {\n        onSuccess: () => {\n            message.success('Success')\n        },\n        onError: (error) => {\n\n            for (let obj in error.response.data) {\n                message.error(`${obj}: ${error.response.data[obj][0]}`)\n            }\n\n        }\n    });\n\n    // special success\n    useEffect(() => {\n        if (putSpecialSuccess) {\n            dispatch({type: EDIT_DATA, payload: \"\"})\n        }\n\n        if (postSpecialSuccess || putSpecialSuccess) {\n\n            navigate('/special')\n        }\n    }, [postSpecial, putData])\n\n\n    // if edit special\n    useEffect(() => {\n        if (editId !== \"\") {\n            editSpecialRefetch();\n        }\n    }, [editId]);\n\n    // if no edit special\n    useEffect(() => {\n        if (editId === \"\") {\n            form.setFieldsValue(initialValueForm)\n        }\n    }, []);\n\n\n    //edit special\n    useEffect(() => {\n        if (editSpecialSuccess) {\n\n            const imageInitialUz = [\n                {\n                    uid: editSpecialData?.id,\n                    name: editSpecialData?.id,\n                    status: 'done',\n                    url: editSpecialData?.image_uz,\n                },\n            ]\n            const imageInitialRu = [\n                {\n                    uid: editSpecialData?.id,\n                    name: editSpecialData?.id,\n                    status: 'done',\n                    url: editSpecialData?.image_ru,\n                },\n            ]\n            const edit = {\n                title_uz: editSpecialData.title_uz,\n                title_ru: editSpecialData.title_ru,\n                image_uz: editSpecialData.image_uz,\n                image_ru: editSpecialData.image_ru,\n            }\n\n\n            setFileListPropsUz(imageInitialUz)\n            setFileListPropsRu(imageInitialRu)\n            form.setFieldsValue(edit)\n        }\n\n    }, [editSpecialData])\n\n\n    const onFinish = (values) => {\n\n        const formData = new FormData();\n\n        formData.append('title_uz', values.title_uz);\n        formData.append('title_ru', values.title_ru);\n\n        if (fileListPropsUz[0]?.originFileObj) {\n            formData.append('image_uz', fileListPropsUz[0]?.originFileObj);\n        }\n        if (fileListPropsRu[0]?.originFileObj) {\n            formData.append('image_ru', fileListPropsRu[0]?.originFileObj);\n        }\n\n\n\n        if (editSpecialData) {\n            putSpecial({url: '/products/special', data: formData, id: editId})\n        } else {\n            postSpecialMutate({url: \"/products/special/\", data: formData});\n        }\n\n\n    }\n    const onFinishFailed = (errorInfo) => {\n        console.log(\"Failed:\", errorInfo);\n    };\n\n\n    // refresh page again get data\n\n    useEffect(() => {\n        const storedValues = JSON.parse(localStorage.getItem('myFormValues'));\n        if (storedValues) {\n            storedValues.images = []\n            form.setFieldsValue(storedValues);\n        }\n\n        const handleBeforeUnload = () => {\n\n            localStorage.setItem(\n                'myFormValues',\n                JSON.stringify(form.getFieldsValue()),\n            );\n        };\n\n        window.addEventListener('beforeunload', handleBeforeUnload);\n\n        return () => {\n            localStorage.removeItem('editDataId')\n            localStorage.removeItem('myFormValues')\n            window.removeEventListener('beforeunload', handleBeforeUnload);\n        }\n    }, []);\n\n\n    // image\n    const onChangeUz = ({fileList: newFileList}) => {\n        setFileListPropsUz(newFileList);\n        form.setFieldsValue({image_uz: newFileList});\n    };\n    const onChangeRu = ({fileList: newFileList}) => {\n        setFileListPropsRu(newFileList);\n        form.setFieldsValue({image_ru: newFileList});\n    };\n\n\n    const onPreview = async (file) => {\n        let src = file.url;\n        if (!src) {\n            src = await new Promise((resolve) => {\n                const reader = new FileReader();\n                reader.readAsDataURL(file.originFileObj);\n                reader.onload = () => resolve(reader.result);\n            });\n        }\n        const image = new Image();\n        image.src = src;\n        const imgWindow = window.open(src);\n        imgWindow?.document.write(image.outerHTML);\n    };\n\n\n\n\n    return (\n        <div>\n            {(postSpecialLoading || editSpecialLoading || putSpecialLoading) ?\n                <AppLoader/> :\n                <Form\n                    form={form}\n                    name=\"basic\"\n                    labelCol={{\n                        span: 24\n                    }}\n                    wrapperCol={{\n                        span: 24\n                    }}\n                    style={{\n                        maxWidth: \"100%\"\n                    }}\n                    initialValues={initialValueForm}\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                    autoComplete=\"off\"\n                >\n                    <Row gutter={20}>\n                        <Col span={12}>\n                            <Form.Item\n                                label={'Specialning nomini kiriting'}\n                                name={'title_uz'}\n                                rules={[{required: true, message: 'Nomi talab qilinadi'}]}\n                                wrapperCol={{\n                                span: 24,\n                            }}\n                                >\n                                <Input/>\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                label={'Введите название спец.'}\n                                name={'title_ru'}\n                                rules={[{required: true, message: 'Требуется название спец'}]}\n                                wrapperCol={{\n                                    span: 24,\n                                }}\n                                >\n                               <Input/>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n\n                    <Row gutter={20}>\n                        <Col span={12}>\n                            <Form.Item\n                                label='Изображение Ru'\n                                name={'image_ru'}\n                                rules={[{required: true, message: 'Требуется загрузка изображения Ru'}]}>\n                                <ImgCrop rotationSlider>\n                                    <Upload\n                                        maxCount={1}\n                                        fileList={fileListPropsUz}\n                                        listType='picture-card'\n                                        onChange={onChangeUz}\n                                        onPreview={onPreview}\n                                        beforeUpload={() => false}\n                                    >\n                                        {fileListPropsUz.length > 0 ? \"\" : \"Upload\"}\n                                    </Upload>\n                                </ImgCrop>\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                label='Изображение Uz'\n                                name={'image_uz'}\n                                rules={[{required: true, message: 'Требуется загрузка изображения Uz'}]}>\n                                <ImgCrop rotationSlider>\n                                    <Upload\n                                        maxCount={1}\n                                        fileList={fileListPropsRu}\n                                        listType='picture-card'\n                                        onChange={onChangeRu}\n                                        onPreview={onPreview}\n                                        beforeUpload={() => false}\n                                    >\n                                        {fileListPropsRu.length > 0 ? \"\" : \"Upload\"}\n                                    </Upload>\n                                </ImgCrop>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n\n                    <Button type=\"primary\" htmlType=\"submit\" style={{width: \"100%\", marginTop: \"20px\"}}>\n                        {\n                            editSpecialSuccess ? 'Edit' : 'Add'\n                        }\n                    </Button>\n                </Form>\n            }\n        </div>\n    );\n};\n\nexport default SpecialPostEdit;","import { Col } from '../grid';\nexport default Col;"],"names":["initialValueForm","image_uz","image_ru","title_ru","title_uz","SpecialPostEdit","form","Form","useForm","navigate","useNavigate","editId","useSelector","state","editData","dispatch","useDispatch","fileListPropsUz","setFileListPropsUz","useState","fileListPropsRu","setFileListPropsRu","mutate","postSpecialMutate","data","postSpecial","isLoading","postSpecialLoading","isSuccess","postSpecialSuccess","useMutation","_ref","url","apiService","postData","onSuccess","message","success","onError","error","obj","response","concat","editSpecialLoading","editSpecialData","refetch","editSpecialRefetch","editSpecialSuccess","useQuery","getDataByID","enabled","putSpecial","putSpecialLoading","putData","putSpecialSuccess","_ref2","id","useEffect","type","EDIT_DATA","payload","setFieldsValue","imageInitialUz","uid","name","status","imageInitialRu","edit","storedValues","JSON","parse","localStorage","getItem","images","handleBeforeUnload","setItem","stringify","getFieldsValue","window","addEventListener","removeItem","removeEventListener","onPreview","async","src","file","Promise","resolve","reader","FileReader","readAsDataURL","originFileObj","onload","result","image","Image","imgWindow","open","document","write","outerHTML","_jsx","children","AppLoader","_jsxs","labelCol","span","wrapperCol","style","maxWidth","initialValues","onFinish","values","_fileListPropsUz$","_fileListPropsRu$","formData","FormData","_fileListPropsUz$2","_fileListPropsRu$2","append","onFinishFailed","errorInfo","console","log","autoComplete","Row","gutter","Col","Item","label","rules","required","Input","ImgCrop","rotationSlider","Upload","maxCount","fileList","listType","onChange","_ref3","newFileList","beforeUpload","length","_ref4","Button","htmlType","width","marginTop"],"sourceRoot":""}