{"version":3,"file":"static/js/709.25783281.chunk.js","mappings":"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","sources":["pages/sample/Product/FormListType.jsx","pages/sample/Product/PostEditProduct.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {Button, Form,  InputNumber, Space,Typography} from \"antd\";\nimport {MinusCircleOutlined} from \"@ant-design/icons\";\nimport PropTypes from \"prop-types\";\nconst { Title } = Typography;\n\nimport './product.css'\nimport {useQuery} from \"react-query\";\nimport apiService from \"../../../@crema/services/apis/api\";\n\nconst FormListType = ({name,title,value}) => {\n    const [logo, setLogo] = useState('')\n    const {data} = useQuery(\n        'get-logo',\n        () => apiService.getData('/products/site-logo/'),\n\n    );\n    useEffect(() => {\n        if (data){\n            setLogo(logo)\n        }\n    }, [data]);\n    return (\n\n        <div className={`${value!==title ? 'hidden' :''}`}>\n            <Title level={3}>{title}</Title>\n            <Form.List name={name}>\n                {(fields, {add, remove}) => (\n                    <>\n                        {fields.map((field, index) => {\n                            return (\n                                <div key={field.fieldKey} style={{marginBottom: 20}}>\n                                    <Space align={\"start\"}>\n\n\n                                        <Form.Item\n                                            label={`Объем парфюма ${index + 1}`}\n                                            name={[field.name, \"litr\"]}\n                                            rules={[\n                                                {required: true, message: \"Размер духов обязателен.\"}\n                                            ]}\n                                            style={{width: \"100%\"}}\n                                        >\n                                            <InputNumber style={{width: \"100%\"}}/>\n                                        </Form.Item>\n                                        <Form.Item\n                                            label={`Цена парфюма ${index + 1}`}\n                                            name={[field.name, \"price\"]}\n                                            rules={[\n                                                {required: true, message: \"Требуется цена на духи.\"}\n                                            ]}\n                                            style={{width: \"100%\"}}\n                                        >\n                                            <InputNumber style={{width: \"100%\"}}/>\n                                        </Form.Item>\n                                        <Form.Item\n                                            label={`Цена на духи со скидкой ${index + 1}`}\n                                            name={[field.name, \"discount\"]}\n\n                                            style={{width: \"100%\"}}\n                                        >\n                                            <InputNumber style={{width: \"100%\"}}/>\n                                        </Form.Item>\n                                    </Space>\n\n\n                                    <MinusCircleOutlined\n                                        onClick={() => remove(field.name)}/>\n                                </div>\n\n                            );\n                        })}\n                        <Form.Item>\n                            <Button type=\"dashed\" onClick={() => add()} block>\n                                Add Item\n                            </Button>\n                        </Form.Item>\n\n                    </>\n                )}\n            </Form.List>\n        </div>\n    );\n};\n\nFormListType.propTypes={\n    name:PropTypes.string,\n    title:PropTypes.string,\n    value:PropTypes.string,\n}\n\nexport default FormListType;","import {useEffect, useMemo, useState} from 'react';\nimport {Button, Col, Form, Input, message, Row, Select, Radio, Upload, Typography} from 'antd';\nimport TextArea from 'antd/es/input/TextArea';\nimport ImgCrop from 'antd-img-crop';\nimport {useMutation, useQuery} from 'react-query';\nimport apiService from '../../../@crema/services/apis/api';\nimport {AppLoader} from '../../../@crema';\nimport {useNavigate} from 'react-router-dom';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {EDIT_DATA} from '../../../shared/constants/ActionTypes';\nimport FormListType from \"./FormListType\";\n\nconst {Title} = Typography\nconst initialValueForm = {\n    name_uz: \"\",\n    name_ru: \"\",\n    the_parmufe_uz: \"\",\n    the_parmufe_ru: \"\",\n    ingredients_uz: \"\",\n    ingredients_ru: \"\",\n    scents_uz: \"\",\n    scents_ru: \"\",\n    gender: \"\",\n    occasion: \"\",\n    category: null,\n    special: null,\n    brand: null,\n    smell: null,\n    image: [],\n    copy: [],\n    luxCopy: [],\n    original: []\n\n};\n\nconst PostEditProduct = () => {\n    const [form] = Form.useForm();\n    const navigate = useNavigate();\n    const {editId} = useSelector((state) => state.editData);\n    const dispatch = useDispatch();\n\n\n    const [fileListProps, setFileListProps] = useState([]);\n    const [fileList, setFileList] = useState([]);\n    const [valuesForm, setValues] = useState({});\n    const [isNotEditImages, setIsNotEditImages] = useState(false);\n    const [deleteImage, setDeleteImage] = useState([]);\n    const [productType, setProductType] = useState('Copy');\n\n\n    //                                           ===React-Query===\n    // query-category\n    const {data: categoryData} = useQuery(\n        'get-categories',\n        () => apiService.getData('/products/index-category/'),\n    );\n\n    // query-brand\n    const {data: brandData} = useQuery(\n        'get-brand',\n        () => apiService.getData('/products/brand/'),\n    );\n\n    // query-smell\n    const {data: smellData} = useQuery(\n        'get-smell',\n        () => apiService.getData('/products/smell/'),\n    );\n\n    // query-special\n    const {data: specialData} = useQuery(\n        'get-special',\n        () => apiService.getData('/products/special/'),\n    );\n\n\n\n    // query-product\n    const {\n        mutate: postProductMutate,\n        data: postProduct,\n        isLoading: postProductLoading,\n        isSuccess: postProductSuccess,\n    } = useMutation(({url, data}) => apiService.postData(url, data), {\n        onSuccess: () => {\n\n            message.success('Success')\n        },\n        onError: (error) => {\n            for (let obj in error.response.data) {\n                message.error(`${obj}: ${error.response.data[obj][0]}`)\n            }\n        }\n    });\n    // query-image\n    const {\n        mutate: imagesUploadMutate,\n        data: imagesUpload,\n        isLoading: imagesUploadLoading,\n        isSuccess: imagesUploadSuccess,\n    } = useMutation(({url, formData}) => apiService.postData(url, formData), {\n\n        onError: (error) => {\n            for (let obj in error.response.data) {\n                message.error(`${obj}: ${error.response.data[obj][0]}`)\n            }\n        }\n    });\n    // query-edit\n    const {\n        isLoading: editProductLoading,\n        data: editProductData,\n        refetch: editProductRefetch,\n        isSuccess: editProductSuccess,\n    } = useQuery(\n        ['edit-product', editId],\n        () => apiService.getDataByID('/products/product', editId),\n        {\n            enabled: false,\n        },\n    );\n    // put-query\n    const {\n        mutate: putProduct,\n        isLoading: putProductLoading,\n        data: putData,\n        isSuccess: putProductSuccess,\n    } = useMutation(({url, data, id}) => apiService.editData(url, data, id), {\n        onSuccess: () => {\n\n            message.success('Success')\n        },\n        onError: (error) => {\n            for (let obj in error.response.data) {\n                message.error(`${obj}: ${error.response.data[obj][0]}`)\n            }\n        }\n    });\n    // delete-image-query\n    const {mutate: imagesDeleteMutate} = useMutation(({url, id}) =>\n        apiService.deleteImages(url, id),\n    );\n\n    //                                           ===UseEffect===\n    // product success\n    useEffect(() => {\n        let delImage = []\n        if (putProductSuccess) {\n            dispatch({type: EDIT_DATA, payload: ''});\n        }\n\n        deleteImage?.map(image => {\n            if (editProductSuccess && image?.uid) {\n                delImage.push(image?.uid)\n            }\n\n        })\n        if (editProductSuccess && delImage.length > 0) {\n            const ids={\n                image_ids:delImage\n            }\n            imagesDeleteMutate({url: '/delete-images', id:ids});\n        }\n        if (postProductSuccess || putProductSuccess) {\n            navigate('/product');\n\n\n        }\n    }, [postProduct, putData]);\n\n    // product error\n\n\n    // if edit product\n    useEffect(() => {\n        if (editId !== '') {\n            editProductRefetch();\n        }\n    }, [editId]);\n\n    // if no edit product\n    useEffect(() => {\n        if (editId === '') {\n            form.setFieldsValue(initialValueForm);\n        }\n\n    }, []);\n\n    //edit product\n    useEffect(() => {\n        let copy = []\n        let luxCopy = []\n        let original = []\n\n        const imagesInitial = [];\n        for (let i = 0; i < editProductData?.product_images?.length; i++) {\n            const editDefaultImages = {\n                uid: editProductData?.product_images[i]?.id,\n                name: editProductData?.product_images[i]?.id,\n                location: editProductData?.product_images[i]?.image,\n                status: \"done\",\n                url: editProductData?.product_images[i]?.image\n            };\n            imagesInitial.push(editDefaultImages);\n        }\n\n        editProductData?.product_type.map(type => {\n            if (type.name_uz === 'Copy') {\n                type?.product_size?.map(size => {\n                    const data = {\n                        litr: size.litr,\n                        price: size.price,\n                        discount: size.discount\n                    }\n                    copy.push(data)\n                })\n            }\n            if (type.name_uz === 'Lux Copy') {\n                type?.product_size?.map(size => {\n                    const data = {\n                        litr: size.litr,\n                        price: size.price,\n                        discount: size.discount\n                    }\n                    luxCopy.push(data)\n                })\n            }\n            if (type.name_uz === 'Original') {\n                type?.product_size?.map(size => {\n                    const data = {\n                        litr: size.litr,\n                        price: size.price,\n                        discount: size.discount\n                    }\n                    original.push(data)\n                })\n            }\n        })\n\n\n        if (editProductSuccess) {\n            const edit = {\n                name_uz: editProductData.name_uz,\n                name_ru: editProductData.name_ru,\n                the_parmufe_uz: editProductData.the_parmufe_uz,\n                the_parmufe_ru: editProductData.the_parmufe_ru,\n                ingredients_uz: editProductData.ingredients_uz,\n                ingredients_ru: editProductData.ingredients_ru,\n                scents_uz: editProductData.scents_uz,\n                scents_ru: editProductData.scents_ru,\n                gender: editProductData.gender,\n                occasion: editProductData.occasion,\n                category: editProductData.category===null ? \"\" :editProductData.category,\n                special: editProductData.special===null ? \"\" :editProductData.special,\n                brand: editProductData.brand_id,\n                smell: editProductData.smell,\n                image: imagesInitial,\n                copy,\n                luxCopy,\n                original\n            };\n            setFileListProps(imagesInitial);\n            form.setFieldsValue(edit);\n        }\n    }, [editProductData]);\n\n    // post product\n    useEffect(() => {\n        let imageData = []\n\n\n        let patchImagesAndInitialImages = [];\n        if (imagesUploadSuccess) {\n            patchImagesAndInitialImages = fileList.concat(imagesUpload?.images);\n        } else {\n            patchImagesAndInitialImages = [...fileList];\n        }\n\n        const deleteLocalImage = []\n        patchImagesAndInitialImages.map((image) => {\n            if (!image?.originFileObj?.uid) {\n                deleteLocalImage.push(image)\n            }\n        })\n\n\n        if (!editProductSuccess && imagesUpload) {\n            imagesUpload?.images?.map(image => {\n                imageData.push(image?.id)\n            })\n        } else {\n            deleteLocalImage.map((image) => {\n\n                if (image?.uid) {\n                    imageData.push(image?.uid)\n                } else {\n                    imageData.push(image?.id)\n\n                }\n            });\n        }\n        // product type\n        const product_type = []\n\n        if (valuesForm.copy?.length > 0) {\n            const data = {\n                name_uz: \"Copy\",\n                name_ru: \"Копия\",\n                product_size: [\n                    ...valuesForm.copy\n                ]\n            }\n            product_type.push(data)\n        }\n\n        if (valuesForm.luxCopy?.length > 0) {\n            const data = {\n                name_uz: \"Lux Copy\",\n                name_ru: \"Люкс Копия\",\n                product_size: [\n                    ...valuesForm.luxCopy\n                ]\n            }\n            product_type.push(data)\n        }\n\n        if (valuesForm.original?.length > 0) {\n            const data = {\n                name_uz: \"Original\",\n                name_ru: \"Оригинал\",\n                product_size: [\n                    ...valuesForm.original\n                ]\n            }\n            product_type.push(data)\n        }\n\n\n        const data = {\n            name_uz: valuesForm.name_uz,\n            name_ru: valuesForm.name_ru,\n            the_parmufe_uz: valuesForm.the_parmufe_uz,\n            the_parmufe_ru: valuesForm.the_parmufe_ru,\n            ingredients_uz: valuesForm.ingredients_uz,\n            ingredients_ru: valuesForm.ingredients_ru,\n            scents_uz: valuesForm.scents_uz,\n            scents_ru: valuesForm.scents_ru,\n            gender: valuesForm.gender,\n            occasion: valuesForm.occasion,\n            category: valuesForm.category===\"\"? null:valuesForm.category,\n            special: valuesForm.special===\"\"? null:valuesForm.special,\n            brand: valuesForm.brand,\n            smell: valuesForm.smell,\n            image: imageData,\n            product_type\n        };\n\n        if (imagesUploadSuccess && !editProductSuccess) {\n            postProductMutate({url: '/products/product/', data});\n        } else if (isNotEditImages || imagesUploadSuccess) {\n            putProduct({url: '/products/product', data, id: editId});\n        }\n    }, [imagesUpload, valuesForm]);\n\n\n    const onFinish = (values) => {\n        const formData = new FormData();\n\n        let uploadNewImage = false;\n\n        fileListProps?.map(file => {\n            if (editProductSuccess) {\n                if (file?.originFileObj?.uid) {\n                    uploadNewImage = true;\n                    formData.append('uploaded_images', file?.originFileObj);\n                    setIsNotEditImages(false);\n                    setFileList(fileListProps);\n                } else {\n                    uploadNewImage = false;\n                    setFileList(fileListProps);\n                    setIsNotEditImages(true);\n                }\n            } else {\n                uploadNewImage = true;\n                formData.append('uploaded_images', file?.originFileObj);\n            }\n\n        })\n        if (uploadNewImage && !imagesUploadSuccess) {\n            imagesUploadMutate({url: '/products/product-image/', formData});\n        }\n\n        setValues(values);\n    };\n    const onFinishFailed = (errorInfo) => {\n        console.log('Failed:', errorInfo);\n    };\n\n    // refresh page again get data\n\n    useEffect(() => {\n        const storedValues = JSON.parse(localStorage.getItem('myFormValues'));\n        if (storedValues) {\n            storedValues.images = []\n            form.setFieldsValue(storedValues);\n        }\n\n        const handleBeforeUnload = () => {\n\n            localStorage.setItem(\n                'myFormValues',\n                JSON.stringify(form.getFieldsValue()),\n            );\n        };\n\n        window.addEventListener('beforeunload', handleBeforeUnload);\n\n        return () => {\n            localStorage.removeItem('editDataId')\n            localStorage.removeItem('myFormValues')\n            window.removeEventListener('beforeunload', handleBeforeUnload);\n        }\n    }, []);\n\n    // render category\n    const optionsGender = useMemo(() => {\n        return [\n            {\n                value: 'male',\n                label: 'Мужской',\n            },\n            {\n                value: 'female',\n                label: 'Женский',\n            },\n            {\n                value: 'unisex',\n                label: 'Унисекс',\n            }\n        ]\n    }, []);\n    const optionsOccasion = useMemo(() => {\n        return [\n            {\n                value: 'spring',\n                label: 'Весна',\n            },\n            {\n                value: 'summer',\n                label: 'Лето',\n            },\n            {\n                value: 'autumn',\n                label: 'Осень',\n            },\n            {\n                value: 'winter',\n                label: 'Зима',\n            }\n        ]\n    }, []);\n\n    const optionsCategoryIndex = useMemo(() => {\n        const data = categoryData?.map((option) => {\n            return {\n                value: option?.id,\n                label: `${option?.name} ${option?.date}`,\n            };\n        });\n\n        const defaultData = {\n            value: \"\",\n            label: `Без категории`,\n        };\n        data?.push(defaultData)\n\n        return data\n    }, [categoryData]);\n\n    const optionsBrand = useMemo(() => {\n        return brandData?.map((option) => {\n            return {\n                value: option?.id,\n                label: option?.name_ru,\n            };\n        });\n    }, [brandData]);\n\n    const optionsSmell = useMemo(() => {\n        return smellData?.map((option) => {\n            return {\n                value: option?.id,\n                label: option?.name_ru,\n            };\n        });\n    }, [smellData]);\n\n    const optionsSpecial = useMemo(() => {\n        const data= specialData?.map((option) => {\n            return {\n                value: option?.id,\n                label: option?.title_ru,\n            };\n        });\n\n        const defaultData = {\n            value: \"\",\n            label: `Удалить из специального`,\n        };\n        data?.push(defaultData)\n\n        return data\n    }, [specialData]);\n\n    const onChange = ({fileList: newFileList}) => {\n        setFileListProps(newFileList);\n        form.setFieldsValue({image: newFileList});\n\n    };\n\n    const handleRemoveImage = (file) => {\n        if (editProductSuccess) {\n            setDeleteImage(prop=>[...prop,file]);\n\n        }\n    };\n    const onPreview = async (file) => {\n        let src = file.url;\n        if (!src) {\n            src = await new Promise((resolve) => {\n                const reader = new FileReader();\n                reader.readAsDataURL(file.originFileObj);\n                reader.onload = () => resolve(reader.result);\n            });\n        }\n        const image = new Image();\n        image.src = src;\n        const imgWindow = window.open(src);\n        imgWindow?.document.write(image.outerHTML);\n    };\n\n\n    const chooseType = (e) => {\n        setProductType(e.target.value)\n    }\n\n    return (\n        <div>\n            {imagesUploadLoading ||\n            postProductLoading ||\n            editProductLoading ||\n            putProductLoading ? (\n                <AppLoader/>\n            ) : (\n                <Form\n                    form={form}\n                    name='basic'\n                    labelCol={{\n                        span: 24,\n                    }}\n                    wrapperCol={{\n                        span: 24,\n                    }}\n                    style={{\n                        maxWidth: '100%',\n                    }}\n                    initialValues={initialValueForm}\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                    autoComplete='off'>\n                    <Title level={3}>Название и описание продукта</Title>\n                    <Row gutter={20}>\n                        <Col span={12}>\n                            <Form.Item\n                                label='Mahsulot nomi Uz'\n                                name='name_uz'\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Mahsulot nomi kiritish talab qilinadi Uz!',\n                                    },\n                                ]}>\n                                <Input/>\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                label='Наименование товара Ru'\n                                name='name_ru'\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please input your Name Ru!',\n                                    },\n                                ]}>\n                                <Input/>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row gutter={20}>\n                        <Col span={12}>\n                            <Form.Item\n                                label='Parfyumeriya haqida'\n                                name='the_parmufe_uz'\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Parfyumeriya haqida talab qilinadi!',\n                                    },\n                                ]}>\n                                <TextArea rows={4}/>\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                label='О парфюме'\n                                name='the_parmufe_ru'\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Обязательно О парфюмерии!',\n                                    },\n                                ]}>\n                                <TextArea rows={4}/>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row gutter={20}>\n                        <Col span={12}>\n                            <Form.Item\n                                label='Ingredientlar haqida'\n                                name='ingredients_uz'\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Ingredientlar haqida talab qilinadi!',\n                                    },\n                                ]}>\n                                <TextArea rows={4}/>\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                label='Об ингредиентах'\n                                name='ingredients_ru'\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Обязательно об ингредиентах!',\n                                    },\n                                ]}>\n                                <TextArea rows={4}/>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row gutter={20}>\n                        <Col span={12}>\n                            <Form.Item\n                                label='Hidlar haqida'\n                                name='scents_uz'\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Hidlar haqida talab qilinadi!',\n                                    },\n                                ]}>\n                                <TextArea rows={4}/>\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                label='О запахах'\n                                name='scents_ru'\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Обязательно о запахах!',\n                                    },\n                                ]}>\n                                <TextArea rows={4}/>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Title level={3}>Выбор к какому типу относится товар</Title>\n                    <Row gutter={20}>\n                        <Col span={12}>\n                            <Form.Item\n                                label={'Выберите пол'}\n                                name={'gender'}\n                                wrapperCol={{\n                                    span: 24,\n                                }}\n                                rules={[\n                                    {required: true, message: 'Требуется пол'},\n                                ]}>\n                                <Select\n                                    style={{\n                                        width: '100%',\n                                    }}\n                                    placeholder='Выберите одну пол'\n                                    optionLabelProp='label'\n                                    options={optionsGender}\n                                />\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                label={'Выберите повод'}\n                                name={'occasion'}\n                                wrapperCol={{\n                                    span: 24,\n                                }}\n                                rules={[\n                                    {required: true, message: 'Требуется повод'},\n                                ]}>\n                                <Select\n                                    style={{\n                                        width: '100%',\n                                    }}\n                                    placeholder='Выберите одну повод'\n                                    optionLabelProp='label'\n                                    options={optionsOccasion}\n                                />\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row gutter={20}>\n                        <Col span={12}>\n                            <Form.Item\n                                label={'Категория домашней страницы'}\n                                name={'category'}\n                                wrapperCol={{\n                                    span: 24,\n                                }}\n\n                            >\n                                <Select\n                                    style={{\n                                        width: '100%',\n                                    }}\n                                    placeholder='Выберите одну Категория'\n                                    optionLabelProp='label'\n                                    options={optionsCategoryIndex}\n                                />\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                label={'Выберите бренд'}\n                                name={'brand'}\n                                wrapperCol={{\n                                    span: 24,\n                                }}\n                                rules={[\n                                    {required: true, message: 'Требуется бренд'},\n                                ]}>\n                                <Select\n                                    style={{\n                                        width: '100%',\n                                    }}\n                                    placeholder='Выберите одну бренд'\n                                    optionLabelProp='label'\n                                    options={optionsBrand}\n                                />\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row gutter={20}>\n                        <Col span={12}>\n                            <Form.Item\n                                label={'Выберите запах'}\n                                name={'smell'}\n                                wrapperCol={{\n                                    span: 24,\n                                }}\n                                rules={[\n                                    {required: true, message: 'Требуется запах'},\n                                ]}>\n\n                                <Select\n                                    style={{\n                                        width: '100%',\n                                    }}\n                                    placeholder='Выберите одну запах'\n                                    optionLabelProp='label'\n                                    options={optionsSmell}\n                                />\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                label={'Добавить в специальный'}\n                                name={'special'}\n                                wrapperCol={{\n                                    span: 24,\n                                }}\n                                >\n\n                                <Select\n                                    style={{\n                                        width: '100%',\n                                    }}\n                                    placeholder='Добавить в специальный'\n                                    optionLabelProp='label'\n                                    options={optionsSpecial}\n                                />\n                            </Form.Item>\n                        </Col>\n\n                    </Row>\n                    <Title level={3}>Изображения товаров (можно загрузить до 3 изображений, Размер: 480x680)</Title>\n                    <Form.Item\n                        label='Загрузить изображение'\n                        name={'image'}\n                        rules={[{required: true, message: 'Пожалуйста, загрузите изображение'}]}>\n                        <ImgCrop rotationSlider>\n                            <Upload\n                                maxCount={5}\n                                fileList={fileListProps}\n                                listType='picture-card'\n                                onChange={onChange}\n                                onPreview={onPreview}\n                                beforeUpload={() => false}\n                                onRemove={handleRemoveImage}>\n                                {fileListProps?.length < 3 && '+ Upload'}\n                            </Upload>\n                        </ImgCrop>\n                    </Form.Item>\n                    <Title level={3}>Размеры и цены продукции</Title>\n                    <Form.Item label=\"Размер товара\" name=\"checkProductType\">\n                        <Radio.Group onChange={chooseType} defaultValue={'Copy'}>\n                            <Radio.Button value=\"Copy\">Copy</Radio.Button>\n                            <Radio.Button value=\"Lux Copy\">Lux Copy</Radio.Button>\n                            <Radio.Button value=\"Original\">Original</Radio.Button>\n                        </Radio.Group>\n                    </Form.Item>\n\n                    <FormListType name={'copy'} title={'Copy'} value={productType}/>\n                    <FormListType name={'luxCopy'} title={'Lux Copy'} value={productType}/>\n                    <FormListType name={'original'} title={'Original'} value={productType}/>\n\n\n                    <Button type='primary' htmlType='submit' style={{width: '100%'}}>\n                        {editProductSuccess ? 'Edit' : 'Add'}\n                    </Button>\n                </Form>\n            )}\n        </div>\n    );\n};\n\nexport default PostEditProduct;"],"names":["Title","Typography","_ref","name","title","value","logo","setLogo","useState","data","useQuery","apiService","getData","useEffect","_jsxs","className","concat","children","_jsx","level","Form","List","fields","_ref2","add","remove","_Fragment","map","field","index","style","marginBottom","Space","align","Item","label","rules","required","message","width","InputNumber","MinusCircleOutlined","onClick","fieldKey","Button","type","block","initialValueForm","name_uz","name_ru","the_parmufe_uz","the_parmufe_ru","ingredients_uz","ingredients_ru","scents_uz","scents_ru","gender","occasion","category","special","brand","smell","image","copy","luxCopy","original","PostEditProduct","form","useForm","navigate","useNavigate","editId","useSelector","state","editData","dispatch","useDispatch","fileListProps","setFileListProps","fileList","setFileList","valuesForm","setValues","isNotEditImages","setIsNotEditImages","deleteImage","setDeleteImage","productType","setProductType","categoryData","brandData","smellData","specialData","mutate","postProductMutate","postProduct","isLoading","postProductLoading","isSuccess","postProductSuccess","useMutation","url","postData","onSuccess","success","onError","error","obj","response","imagesUploadMutate","imagesUpload","imagesUploadLoading","imagesUploadSuccess","formData","editProductLoading","editProductData","refetch","editProductRefetch","editProductSuccess","getDataByID","enabled","putProduct","putProductLoading","putData","putProductSuccess","_ref3","id","imagesDeleteMutate","_ref4","deleteImages","delImage","EDIT_DATA","payload","uid","push","length","image_ids","setFieldsValue","imagesInitial","i","_editProductData$prod","product_images","_editProductData$prod2","_editProductData$prod3","_editProductData$prod4","_editProductData$prod5","editDefaultImages","location","status","product_type","_type$product_size","_type$product_size2","_type$product_size3","product_size","size","litr","price","discount","edit","brand_id","_valuesForm$copy","_valuesForm$luxCopy","_valuesForm$original","imageData","patchImagesAndInitialImages","images","deleteLocalImage","_imagesUpload$images","_image$originFileObj","originFileObj","storedValues","JSON","parse","localStorage","getItem","handleBeforeUnload","setItem","stringify","getFieldsValue","window","addEventListener","removeItem","removeEventListener","optionsGender","useMemo","optionsOccasion","optionsCategoryIndex","option","date","optionsBrand","optionsSmell","optionsSpecial","title_ru","AppLoader","labelCol","span","wrapperCol","maxWidth","initialValues","onFinish","values","FormData","uploadNewImage","file","_file$originFileObj","append","onFinishFailed","errorInfo","console","log","autoComplete","Row","gutter","Col","Input","TextArea","rows","Select","placeholder","optionLabelProp","options","ImgCrop","rotationSlider","Upload","maxCount","listType","onChange","_ref5","newFileList","onPreview","async","src","Promise","resolve","reader","FileReader","readAsDataURL","onload","result","Image","imgWindow","open","document","write","outerHTML","beforeUpload","onRemove","prop","Radio","e","target","defaultValue","FormListType","htmlType"],"sourceRoot":""}