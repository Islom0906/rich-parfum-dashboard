{"version":3,"file":"static/js/890.b5449438.chunk.js","mappings":"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","sources":["@crema/services/apis/axios.js","@crema/utility/helper/persistence-storage.js","@crema/services/apis/api.js","pages/sample/Index-Category/IndexCategoryPostEdit.jsx","../node_modules/antd/es/col/index.js"],"sourcesContent":["import {getItem} from '../../utility/helper/persistence-storage';\nimport axios from 'axios';\n\naxios.defaults.baseURL = `${process.env.REACT_APP_API_URL}`;\n\naxios.interceptors.request.use((config) => {\n    const jwt = getItem('richtoken');\n    const authorization = jwt!==null ? `Bearer ${jwt}` : '';\n    config.headers.authorization = authorization;\n    return config;\n});\n\nexport default axios;","export const getItem=(key)=>{\n    try {\n        return localStorage.getItem(key)\n    } catch (error) {\n        console.log('Error getting data')\n    }\n}\n\nexport const setItem=(key,data)=>{\n    try {\n        localStorage.setItem(key,data)\n    } catch (error) {\n        console.log('Error saving data')\n    }\n}\nexport const removeItem=(key)=>{\n    try {\n        return localStorage.removeItem(key)\n    } catch (error) {\n        console.log('Error removing data')\n    }\n}","import axios from './axios';\n\nconst apiService = {\n    // malutmotlarni get qilish uchun url beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async getData(url) {\n        const {data} = await axios.get(url);\n        return data;\n    },\n    // faqat bitta malumot  get qilish uchun url va idsi beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async getDataByID(url, id) {\n        const {data} = await axios.get(`${url}/${id}`);\n        return data;\n    },\n    // malutmotni post qilish uchun url va yaratilgan malumot beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async postData(url, formData) {\n        const {data}= await axios.post(url, formData);\n        return data\n    },\n    // malutmotni edit qilish uchun url,id va yaratilgan malumot beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async editData(url, formData, id) {\n        const {data}= await axios.put(`${url}/${id}/`, formData)\n        return data\n    },\n    // malutmotni delete qilish uchun url va id  beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async deleteData(url, id) {\n        await axios.delete(`${url}/${id}`);\n    },\n\n    async deleteImages(url, ids) {\n        await axios.delete(url, {data:ids});\n    },\n};\nexport default apiService;","import React, {useEffect} from 'react';\nimport {Button, Col, Form, Input, message, Row} from \"antd\";\nimport {useMutation, useQuery} from \"react-query\";\nimport apiService from \"../../../@crema/services/apis/api\";\nimport {AppLoader} from \"../../../@crema\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {EDIT_DATA} from \"../../../shared/constants/ActionTypes\";\n\n\nconst initialValueForm = {\n    name: \"\",\n    date: \"\",\n\n};\n\n\nconst IndexCategoryPostEdit = () => {\n\n    const [form] = Form.useForm();\n    const navigate = useNavigate()\n    const {editId} = useSelector(state => state.editData)\n    const dispatch = useDispatch()\n\n\n\n    // query-IndexCategory\n    const {\n        mutate: postIndexCategoryMutate,\n        data: postIndexCategory,\n        isLoading: postIndexCategoryLoading,\n        isSuccess: postIndexCategorySuccess,\n    } = useMutation(({url, data}) => apiService.postData(url, data), {\n        onSuccess: () => {\n\n            message.success('Success')\n        },\n        onError: (error) => {\n            for (let obj in error.response.data) {\n                message.error(`${obj}: ${error.response.data[obj][0]}`)\n            }\n        }\n    });\n\n    // query-edit\n    const {\n        isLoading: editIndexCategoryLoading,\n        data: editIndexCategoryData,\n        refetch: editIndexCategoryRefetch,\n        isSuccess: editIndexCategorySuccess,\n    } = useQuery([\"edit-index-category\", editId], () => apiService.getDataByID(\"/products/index-category\", editId), {\n        enabled: false\n    });\n    // put-query\n    const {\n        mutate: putIndexCategory,\n        isLoading: putIndexCategoryLoading,\n        data: putData,\n        isSuccess: putIndexCategorySuccess\n    } = useMutation(({\n                         url,\n                         data,\n                         id\n                     }) => apiService.editData(url, data, id), {\n        onSuccess: () => {\n            message.success('Success')\n        },\n        onError: (error) => {\n\n            for (let obj in error.response.data) {\n                message.error(`${obj}: ${error.response.data[obj][0]}`)\n            }\n\n        }\n    });\n\n    // IndexCategory success\n    useEffect(() => {\n        if (putIndexCategorySuccess) {\n            dispatch({type: EDIT_DATA, payload: \"\"})\n        }\n\n        if (postIndexCategorySuccess || putIndexCategorySuccess) {\n\n            navigate('/index-category')\n        }\n    }, [postIndexCategory, putData])\n\n\n\n\n    // if edit IndexCategory\n    useEffect(() => {\n        if (editId !== \"\") {\n            editIndexCategoryRefetch();\n        }\n    }, [editId]);\n\n    // if no edit IndexCategory\n    useEffect(() => {\n        if (editId === \"\") {\n            form.setFieldsValue(initialValueForm)\n        }\n    }, []);\n\n\n    //edit IndexCategory\n    useEffect(() => {\n        if (editIndexCategorySuccess) {\n\n\n            const edit = {\n                name: editIndexCategoryData.name,\n                date: editIndexCategoryData.date===null ? \"\" : editIndexCategoryData.date,\n            }\n\n            form.setFieldsValue(edit)\n        }\n\n    }, [editIndexCategoryData])\n\n\n    const onFinish = (values) => {\n\n\n\n\n        if (editIndexCategoryData) {\n            putIndexCategory({url: '/products/index-category', data: values, id: editId})\n        } else {\n            postIndexCategoryMutate({url: \"/products/index-category/\", data: values});\n        }\n\n\n    }\n    const onFinishFailed = (errorInfo) => {\n        console.log(\"Failed:\", errorInfo);\n    };\n\n\n    // refresh page again get data\n\n    useEffect(() => {\n        const storedValues = JSON.parse(localStorage.getItem('myFormValues'));\n        if (storedValues) {\n            storedValues.images = []\n            form.setFieldsValue(storedValues);\n        }\n\n        const handleBeforeUnload = () => {\n\n            localStorage.setItem(\n                'myFormValues',\n                JSON.stringify(form.getFieldsValue()),\n            );\n        };\n\n        window.addEventListener('beforeunload', handleBeforeUnload);\n\n        return () => {\n            localStorage.removeItem('editDataId')\n            localStorage.removeItem('myFormValues')\n            window.removeEventListener('beforeunload', handleBeforeUnload);\n        }\n    }, []);\n\n\n\n    return (\n        <div>\n            {(postIndexCategoryLoading || editIndexCategoryLoading || putIndexCategoryLoading) ?\n                <AppLoader/> :\n                <Form\n                    form={form}\n                    name=\"basic\"\n                    labelCol={{\n                        span: 24\n                    }}\n                    wrapperCol={{\n                        span: 24\n                    }}\n                    style={{\n                        maxWidth: \"100%\"\n                    }}\n                    initialValues={initialValueForm}\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                    autoComplete=\"off\"\n                >\n                    <Row gutter={20}>\n                        <Col span={12}>\n                            <Form.Item\n                                label=\"Name\"\n                                name=\"name\"\n                                rules={[{required: true, message: 'Категория обязательна'}]}\n\n                            >\n                                <Input/>\n                            </Form.Item>\n\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                label=\"Дата (Не обязательно)\"\n                                name=\"date\"\n                            >\n                                <Input/>\n                            </Form.Item>\n\n                        </Col>\n\n                    </Row>\n\n\n\n                    <Button type=\"primary\" htmlType=\"submit\" style={{width: \"100%\", marginTop: \"20px\"}}>\n                        {\n                            editIndexCategorySuccess ? 'Edit' : 'Add'\n                        }\n                    </Button>\n                </Form>\n            }\n        </div>\n    );\n};\n\nexport default IndexCategoryPostEdit;","import { Col } from '../grid';\nexport default Col;"],"names":["axios","concat","process","config","jwt","key","localStorage","getItem","error","console","log","authorization","headers","getData","url","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","sent","abrupt","stop","getDataByID","id","_callee2","_yield$axios$get2","_context2","postData","formData","_callee3","_yield$axios$post","_context3","editData","_callee4","_yield$axios$put","_context4","deleteData","_callee5","_context5","deleteImages","ids","_callee6","_context6","initialValueForm","name","date","_Form$useForm","Form","form","_slicedToArray","navigate","useNavigate","editId","useSelector","state","dispatch","useDispatch","_useMutation","useMutation","_ref","apiService","onSuccess","message","onError","obj","response","postIndexCategoryMutate","mutate","postIndexCategory","postIndexCategoryLoading","isLoading","postIndexCategorySuccess","isSuccess","_useQuery","useQuery","enabled","editIndexCategoryLoading","editIndexCategoryData","editIndexCategoryRefetch","refetch","editIndexCategorySuccess","_useMutation2","_ref2","putIndexCategory","putIndexCategoryLoading","putData","putIndexCategorySuccess","useEffect","type","EDIT_DATA","payload","setFieldsValue","edit","storedValues","JSON","parse","images","handleBeforeUnload","setItem","stringify","getFieldsValue","window","addEventListener","removeItem","removeEventListener","_jsx","children","AppLoader","_jsxs","labelCol","span","wrapperCol","style","maxWidth","initialValues","onFinish","values","onFinishFailed","errorInfo","autoComplete","Row","gutter","Col","label","rules","required","Input","Button","htmlType","width","marginTop"],"sourceRoot":""}