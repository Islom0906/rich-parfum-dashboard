{"version":3,"file":"static/js/345.676d1a05.chunk.js","mappings":"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","sources":["pages/sample/Contact/ContactPostEdit.jsx","../node_modules/@ant-design/icons-svg/es/asn/MinusCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/MinusCircleOutlined.js","../node_modules/antd/es/col/index.js"],"sourcesContent":["import React, {useEffect} from 'react';\nimport {Button, Col, Form, Input, message, Row, Space} from \"antd\";\nimport {useMutation, useQuery} from \"react-query\";\nimport apiService from \"../../../@crema/services/apis/api\";\nimport {AppLoader} from \"../../../@crema\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {EDIT_DATA} from \"../../../shared/constants/ActionTypes\";\nimport {MinusCircleOutlined} from \"@ant-design/icons\";\n\nconst initialValueForm = {\n    name_ru:\"\",\n    name_uz:\"\",\n    contact_child: [\n        {\n            name_uz: \"\",\n            name_ru: \"\",\n            text: \"\"\n        }\n    ]\n};\n\n\n\n\n\nconst ContactPostEdit = () => {\n\n    const [form] = Form.useForm();\n    const navigate = useNavigate()\n    const {editId}=useSelector(state => state.editData)\n    const dispatch=useDispatch()\n\n\n\n\n    // query-contact\n    const {\n        mutate: postContactMutate,\n        data: postContact,\n        isLoading: postContactLoading,\n        isSuccess: postContactSuccess,\n    } = useMutation(({url, data}) => apiService.postData(url, data),{\n        onSuccess:()=>{\n\n            message.success('Success')\n        },\n        onError: (error) => {\n            for (let obj in error.response.data) {\n                message.error(`${obj}: ${error.response.data[obj][0]}`)\n            }\n        }\n    });\n\n    // query-edit\n    const {\n        isLoading: editContactLoading,\n        data: editContactData,\n        refetch: editContactRefetch,\n        isSuccess: editContactSuccess,\n    } = useQuery([\"edit-contact\", editId], () => apiService.getDataByID(\"/about/contact-father\", editId), {\n        enabled: false\n    });\n    // put-query\n    const {\n        mutate: putContact,\n        isLoading: putContactLoading,\n        data: putData,\n        isSuccess: putContactSuccess\n    } = useMutation(({\n                         url,\n                         data,\n                         id\n                     }) => apiService.editData(url, data, id),{\n        onSuccess:()=>{\n            message.success('Success')\n        },\n        onError: (error) => {\n            for (let obj in error.response.data) {\n                message.error(`${obj}: ${error.response.data[obj][0]}`)\n            }\n        }\n    });\n\n    // contact success\n    useEffect(() => {\n        if (putContactSuccess) {\n            dispatch({type:EDIT_DATA,payload:\"\"})\n        }\n\n        if (postContactSuccess || putContactSuccess) {\n\n            navigate('/contact')\n        }\n    }, [postContact,putData])\n\n\n\n\n\n    // if edit contact\n    useEffect(() => {\n        if (editId !== \"\") {\n            editContactRefetch();\n        }\n    }, [editId]);\n\n    // if no edit contact\n    useEffect(() => {\n        if (editId===\"\"){\n            form.setFieldsValue(initialValueForm)\n        }\n    }, []);\n\n\n\n\n    //edit contact\n    useEffect(()=>{\n        if (editContactSuccess){\n    const editContactChild=[]\n            editContactData?.contact_child.map(item=>{\n                const data={\n                    name_ru:item.name_ru,\n                    name_uz:item.name_uz,\n                    text:item.text,\n                }\n                editContactChild.push(data)\n            })\n\n\n        const edit={\n            name_ru:editContactData.name_ru,\n            name_uz:editContactData.name_uz,\n            contact_child: editContactChild\n        }\n            form.setFieldsValue(edit)\n        }\n\n    },[editContactData])\n\n\n\n    const onFinish = (values) => {\n\n\n\n        if (editContactData){\n            putContact({url: '/about/contact-father',data:values,id:editId})\n        }else{\n            postContactMutate({url: \"/about/contact-father/\", data:values});\n        }\n\n\n\n\n\n\n    }\n    const onFinishFailed = (errorInfo) => {\n        console.log(\"Failed:\", errorInfo);\n    };\n\n\n    // refresh page again get data\n\n  useEffect(() => {\n    const storedValues = JSON.parse(localStorage.getItem('myFormValues'));\n    if (storedValues) {\n        storedValues.images=[]\n      form.setFieldsValue(storedValues);\n    }\n\n    const handleBeforeUnload = () => {\n        \n            localStorage.setItem(\n              'myFormValues',\n              JSON.stringify(form.getFieldsValue()),\n            );\n    };\n\n    window.addEventListener('beforeunload', handleBeforeUnload);\n\n    return ()=>{\n        localStorage.removeItem('editDataId')\n        localStorage.removeItem('myFormValues')\n        window.removeEventListener('beforeunload', handleBeforeUnload);\n    }\n  }, []);\n\n\n\n\n\n    return (\n        <div>\n            {( postContactLoading ||editContactLoading ||putContactLoading) ?\n                <AppLoader/> :\n                <Form\n                    form={form}\n                    name=\"basic\"\n                    labelCol={{\n                        span: 24\n                    }}\n                    wrapperCol={{\n                        span: 24\n                    }}\n                    style={{\n                        maxWidth: \"100%\"\n                    }}\n                    initialValues={initialValueForm}\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                    autoComplete=\"off\"\n                >\n                    <Row gutter={20}>\n                        <Col span={12}>\n                            <Form.Item\n                                label=\"Контактное лицо Ru\"\n                                name=\"name_ru\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: \"Ввод Контактное лицо обязателен Ru!\"\n                                    }\n                                ]}\n                            >\n                                <Input/>\n                            </Form.Item>\n\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                label=\"Kontakt sarlavhasi Uz\"\n                                name=\"name_uz\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: \"Kontakt sarlavhasi kiritish majburiy Uz!\"\n                                    }\n                                ]}\n                            >\n                                <Input/>\n                            </Form.Item>\n\n                        </Col>\n\n                    </Row>\n\n                    <Form.List name={'contact_child'}>\n                        {(fields, {add, remove}) => (\n                            <>\n                                {fields.map((field, index) => {\n                                    return (\n                                        <div key={field.fieldKey} style={{marginBottom: 20}}>\n                                            <Space align={\"start\"}>\n\n\n                                                <Form.Item\n                                                    label={`Bog'lanish uchun ${index + 1}`}\n                                                    name={[field.name, \"name_uz\"]}\n                                                    rules={[\n                                                        {required: true, message: \"Bog'lanish uchun malumot kiriting\"}\n                                                    ]}\n                                                    style={{width: \"100%\"}}\n                                                >\n                                                    <Input/>\n                                                </Form.Item>\n                                                <Form.Item\n                                                    label={`Связаться ${index + 1}`}\n                                                    name={[field.name, \"name_ru\"]}\n                                                    rules={[\n                                                        {required: true, message: \"Связаться обязателен.\"}\n                                                    ]}\n                                                    style={{width: \"100%\"}}\n                                                >\n                                                    <Input/>\n                                                </Form.Item>\n\n                                            </Space>\n\n\n                                            <MinusCircleOutlined\n                                                onClick={() => remove(field.name)}/>\n                                        </div>\n\n                                    );\n                                })}\n                                <Form.Item>\n                                    <Button type=\"dashed\" onClick={() => add()} block>\n                                        Add Item\n                                    </Button>\n                                </Form.Item>\n\n                            </>\n                        )}\n                    </Form.List>\n                        <Button type=\"primary\" htmlType=\"submit\" style={{width: \"100%\",marginTop:\"20px\"}}>\n                    {\n                            editContactSuccess ? 'Edit' : 'Add'\n                        }\n                    </Button>\n                </Form>\n            }\n        </div>\n    );\n};\n\nexport default ContactPostEdit;","// This icon file is generated automatically.\nvar MinusCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M696 480H328c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h368c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"minus-circle\", \"theme\": \"outlined\" };\nexport default MinusCircleOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport MinusCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/MinusCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar MinusCircleOutlined = function MinusCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: MinusCircleOutlinedSvg\n  }));\n};\nMinusCircleOutlined.displayName = 'MinusCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(MinusCircleOutlined);","import { Col } from '../grid';\nexport default Col;"],"names":["initialValueForm","name_ru","name_uz","contact_child","text","ContactPostEdit","form","Form","useForm","navigate","useNavigate","editId","useSelector","state","editData","dispatch","useDispatch","mutate","postContactMutate","data","postContact","isLoading","postContactLoading","isSuccess","postContactSuccess","useMutation","_ref","url","apiService","postData","onSuccess","message","success","onError","error","obj","response","concat","editContactLoading","editContactData","refetch","editContactRefetch","editContactSuccess","useQuery","getDataByID","enabled","putContact","putContactLoading","putData","putContactSuccess","_ref2","id","useEffect","type","EDIT_DATA","payload","setFieldsValue","editContactChild","map","item","push","edit","storedValues","JSON","parse","localStorage","getItem","images","handleBeforeUnload","setItem","stringify","getFieldsValue","window","addEventListener","removeItem","removeEventListener","_jsx","children","AppLoader","_jsxs","name","labelCol","span","wrapperCol","style","maxWidth","initialValues","onFinish","values","onFinishFailed","errorInfo","console","log","autoComplete","Row","gutter","Col","Item","label","rules","required","Input","List","fields","_ref3","add","remove","_Fragment","field","index","marginBottom","Space","align","width","MinusCircleOutlined","onClick","fieldKey","Button","block","htmlType","marginTop","props","ref","React","AntdIcon","_objectSpread","icon","MinusCircleOutlinedSvg","displayName"],"sourceRoot":""}