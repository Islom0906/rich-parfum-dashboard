{"version":3,"file":"static/js/709.7cf4a615.chunk.js","mappings":"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","sources":["@crema/services/apis/axios.js","@crema/utility/helper/persistence-storage.js","@crema/services/apis/api.js","pages/sample/Product/FormListType.jsx","pages/sample/Product/PostEditProduct.jsx"],"sourcesContent":["import {getItem} from '../../utility/helper/persistence-storage';\nimport axios from 'axios';\n\naxios.defaults.baseURL = `${process.env.REACT_APP_API_URL}`;\n\naxios.interceptors.request.use((config) => {\n    const jwt = getItem('richtoken');\n    const authorization = jwt!==null ? `Bearer ${jwt}` : '';\n    config.headers.authorization = authorization;\n    return config;\n});\n\nexport default axios;","export const getItem=(key)=>{\n    try {\n        return localStorage.getItem(key)\n    } catch (error) {\n        console.log('Error getting data')\n    }\n}\n\nexport const setItem=(key,data)=>{\n    try {\n        localStorage.setItem(key,data)\n    } catch (error) {\n        console.log('Error saving data')\n    }\n}\nexport const removeItem=(key)=>{\n    try {\n        return localStorage.removeItem(key)\n    } catch (error) {\n        console.log('Error removing data')\n    }\n}","import axios from './axios';\n\nconst apiService = {\n    // malutmotlarni get qilish uchun url beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async getData(url) {\n        const {data} = await axios.get(url);\n        return data;\n    },\n    // faqat bitta malumot  get qilish uchun url va idsi beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async getDataByID(url, id) {\n        const {data} = await axios.get(`${url}/${id}`);\n        return data;\n    },\n    // malutmotni post qilish uchun url va yaratilgan malumot beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async postData(url, formData) {\n        const {data}= await axios.post(url, formData);\n        return data\n    },\n    // malutmotni edit qilish uchun url,id va yaratilgan malumot beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async editData(url, formData, id) {\n        const {data}= await axios.put(`${url}/${id}/`, formData)\n        return data\n    },\n    // malutmotni delete qilish uchun url va id  beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async deleteData(url, id) {\n        await axios.delete(`${url}/${id}`);\n    },\n\n    async deleteImages(url, ids) {\n        console.log()\n        await axios.delete(url, {data:ids});\n    },\n};\nexport default apiService;","import React, {useEffect, useState} from 'react';\nimport {Button, Form,  InputNumber, Space,Typography} from \"antd\";\nimport {MinusCircleOutlined} from \"@ant-design/icons\";\nimport PropTypes from \"prop-types\";\nconst { Title } = Typography;\n\nimport './product.css'\nimport {useQuery} from \"react-query\";\nimport apiService from \"../../../@crema/services/apis/api\";\n\nconst FormListType = ({name,title,value}) => {\n    const [logo, setLogo] = useState('')\n    const {data} = useQuery(\n        'get-logo',\n        () => apiService.getData('/products/site-logo/'),\n\n    );\n    useEffect(() => {\n        if (data){\n            setLogo(logo)\n        }\n    }, [data]);\n    return (\n\n        <div className={`${value!==title ? 'hidden' :''}`}>\n            <Title level={3}>{title}</Title>\n            <Form.List name={name}>\n                {(fields, {add, remove}) => (\n                    <>\n                        {fields.map((field, index) => {\n                            return (\n                                <div key={field.fieldKey} style={{marginBottom: 20}}>\n                                    <Space align={\"start\"}>\n\n\n                                        <Form.Item\n                                            label={`Объем парфюма ${index + 1}`}\n                                            name={[field.name, \"litr\"]}\n                                            rules={[\n                                                {required: true, message: \"Размер духов обязателен.\"}\n                                            ]}\n                                            style={{width: \"100%\"}}\n                                        >\n                                            <InputNumber style={{width: \"100%\"}}/>\n                                        </Form.Item>\n                                        <Form.Item\n                                            label={`Цена парфюма ${index + 1}`}\n                                            name={[field.name, \"price\"]}\n                                            rules={[\n                                                {required: true, message: \"Требуется цена на духи.\"}\n                                            ]}\n                                            style={{width: \"100%\"}}\n                                        >\n                                            <InputNumber style={{width: \"100%\"}}/>\n                                        </Form.Item>\n                                        <Form.Item\n                                            label={`Цена на духи со скидкой ${index + 1}`}\n                                            name={[field.name, \"discount\"]}\n\n                                            style={{width: \"100%\"}}\n                                        >\n                                            <InputNumber style={{width: \"100%\"}}/>\n                                        </Form.Item>\n                                    </Space>\n\n\n                                    <MinusCircleOutlined\n                                        onClick={() => remove(field.name)}/>\n                                </div>\n\n                            );\n                        })}\n                        <Form.Item>\n                            <Button type=\"dashed\" onClick={() => add()} block>\n                                Add Item\n                            </Button>\n                        </Form.Item>\n\n                    </>\n                )}\n            </Form.List>\n        </div>\n    );\n};\n\nFormListType.propTypes={\n    name:PropTypes.string,\n    title:PropTypes.string,\n    value:PropTypes.string,\n}\n\nexport default FormListType;","import {useEffect, useMemo, useState} from 'react';\nimport {Button, Col, Form, Input, message, Row, Select, Radio, Upload, Typography} from 'antd';\nimport TextArea from 'antd/es/input/TextArea';\nimport ImgCrop from 'antd-img-crop';\nimport {useMutation, useQuery} from 'react-query';\nimport apiService from '../../../@crema/services/apis/api';\nimport {AppLoader} from '../../../@crema';\nimport {useNavigate} from 'react-router-dom';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {EDIT_DATA} from '../../../shared/constants/ActionTypes';\nimport FormListType from \"./FormListType\";\n\nconst {Title} = Typography\nconst initialValueForm = {\n    name_uz: \"\",\n    name_ru: \"\",\n    the_parmufe_uz: \"\",\n    the_parmufe_ru: \"\",\n    ingredients_uz: \"\",\n    ingredients_ru: \"\",\n    scents_uz: \"\",\n    scents_ru: \"\",\n    gender: \"\",\n    occasion: \"\",\n    category: null,\n    special: null,\n    brand: null,\n    smell: null,\n    image: [],\n    copy: [],\n    luxCopy: [],\n    original: []\n\n};\n\nconst PostEditProduct = () => {\n    const [form] = Form.useForm();\n    const navigate = useNavigate();\n    const {editId} = useSelector((state) => state.editData);\n    const dispatch = useDispatch();\n\n\n    const [fileListProps, setFileListProps] = useState([]);\n    const [fileList, setFileList] = useState([]);\n    const [valuesForm, setValues] = useState({});\n    const [isNotEditImages, setIsNotEditImages] = useState(false);\n    const [deleteImage, setDeleteImage] = useState([]);\n    const [productType, setProductType] = useState('Copy');\n\n\n    //                                           ===React-Query===\n    // query-category\n    const {data: categoryData} = useQuery(\n        'get-categories',\n        () => apiService.getData('/products/index-category/'),\n    );\n\n    // query-brand\n    const {data: brandData} = useQuery(\n        'get-brand',\n        () => apiService.getData('/products/brand/'),\n    );\n\n    // query-smell\n    const {data: smellData} = useQuery(\n        'get-smell',\n        () => apiService.getData('/products/smell/'),\n    );\n\n    // query-special\n    const {data: specialData} = useQuery(\n        'get-special',\n        () => apiService.getData('/products/special/'),\n    );\n\n\n\n    // query-product\n    const {\n        mutate: postProductMutate,\n        data: postProduct,\n        isLoading: postProductLoading,\n        isSuccess: postProductSuccess,\n    } = useMutation(({url, data}) => apiService.postData(url, data), {\n        onSuccess: () => {\n\n            message.success('Success')\n        },\n        onError: (error) => {\n            for (let obj in error.response.data) {\n                message.error(`${obj}: ${error.response.data[obj][0]}`)\n            }\n        }\n    });\n    // query-image\n    const {\n        mutate: imagesUploadMutate,\n        data: imagesUpload,\n        isLoading: imagesUploadLoading,\n        isSuccess: imagesUploadSuccess,\n    } = useMutation(({url, formData}) => apiService.postData(url, formData), {\n\n        onError: (error) => {\n            for (let obj in error.response.data) {\n                message.error(`${obj}: ${error.response.data[obj][0]}`)\n            }\n        }\n    });\n    // query-edit\n    const {\n        isLoading: editProductLoading,\n        data: editProductData,\n        refetch: editProductRefetch,\n        isSuccess: editProductSuccess,\n    } = useQuery(\n        ['edit-product', editId],\n        () => apiService.getDataByID('/products/product', editId),\n        {\n            enabled: false,\n        },\n    );\n    // put-query\n    const {\n        mutate: putProduct,\n        isLoading: putProductLoading,\n        data: putData,\n        isSuccess: putProductSuccess,\n    } = useMutation(({url, data, id}) => apiService.editData(url, data, id), {\n        onSuccess: () => {\n\n            message.success('Success')\n        },\n        onError: (error) => {\n            for (let obj in error.response.data) {\n                message.error(`${obj}: ${error.response.data[obj][0]}`)\n            }\n        }\n    });\n    // delete-image-query\n    const {mutate: imagesDeleteMutate} = useMutation(({url, id}) =>\n        apiService.deleteImages(url, id),\n    );\n\n    //                                           ===UseEffect===\n    // product success\n    useEffect(() => {\n        let delImage = []\n        if (putProductSuccess) {\n            dispatch({type: EDIT_DATA, payload: ''});\n        }\n\n        deleteImage?.map(image => {\n            if (editProductSuccess && image?.uid) {\n                delImage.push(image?.uid)\n            }\n\n        })\n        if (editProductSuccess && delImage.length > 0) {\n            const ids={\n                image_ids:delImage\n            }\n            imagesDeleteMutate({url: '/products/product-image/', id:ids});\n        }\n        if (postProductSuccess || putProductSuccess) {\n            navigate('/product');\n\n\n        }\n    }, [postProduct, putData]);\n\n    // product error\n\n\n    // if edit product\n    useEffect(() => {\n        if (editId !== '') {\n            editProductRefetch();\n        }\n    }, [editId]);\n\n    // if no edit product\n    useEffect(() => {\n        if (editId === '') {\n            form.setFieldsValue(initialValueForm);\n        }\n\n    }, []);\n\n    //edit product\n    useEffect(() => {\n        let copy = []\n        let luxCopy = []\n        let original = []\n\n        const imagesInitial = [];\n        for (let i = 0; i < editProductData?.product_images?.length; i++) {\n            const editDefaultImages = {\n                uid: editProductData?.product_images[i]?.id,\n                name: editProductData?.product_images[i]?.id,\n                location: editProductData?.product_images[i]?.image,\n                status: \"done\",\n                url: editProductData?.product_images[i]?.image\n            };\n            imagesInitial.push(editDefaultImages);\n        }\n\n        editProductData?.product_type.map(type => {\n            if (type.name_uz === 'Copy') {\n                type?.product_size?.map(size => {\n                    const data = {\n                        litr: size.litr,\n                        price: size.price,\n                        discount: size.discount\n                    }\n                    copy.push(data)\n                })\n            }\n            if (type.name_uz === 'Lux Copy') {\n                type?.product_size?.map(size => {\n                    const data = {\n                        litr: size.litr,\n                        price: size.price,\n                        discount: size.discount\n                    }\n                    luxCopy.push(data)\n                })\n            }\n            if (type.name_uz === 'Original') {\n                type?.product_size?.map(size => {\n                    const data = {\n                        litr: size.litr,\n                        price: size.price,\n                        discount: size.discount\n                    }\n                    original.push(data)\n                })\n            }\n        })\n\n\n        if (editProductSuccess) {\n            const edit = {\n                name_uz: editProductData.name_uz,\n                name_ru: editProductData.name_ru,\n                the_parmufe_uz: editProductData.the_parmufe_uz,\n                the_parmufe_ru: editProductData.the_parmufe_ru,\n                ingredients_uz: editProductData.ingredients_uz,\n                ingredients_ru: editProductData.ingredients_ru,\n                scents_uz: editProductData.scents_uz,\n                scents_ru: editProductData.scents_ru,\n                gender: editProductData.gender,\n                occasion: editProductData.occasion,\n                category: editProductData.category===null ? \"\" :editProductData.category,\n                special: editProductData.special===null ? \"\" :editProductData.special,\n                brand: editProductData.brand_id,\n                smell: editProductData.smell,\n                image: imagesInitial,\n                copy,\n                luxCopy,\n                original\n            };\n            setFileListProps(imagesInitial);\n            form.setFieldsValue(edit);\n        }\n    }, [editProductData]);\n\n    // post product\n    useEffect(() => {\n        let imageData = []\n\n\n        let patchImagesAndInitialImages = [];\n        if (imagesUploadSuccess) {\n            patchImagesAndInitialImages = fileList.concat(imagesUpload?.images);\n        } else {\n            patchImagesAndInitialImages = [...fileList];\n        }\n\n        const deleteLocalImage = []\n        patchImagesAndInitialImages.map((image) => {\n            if (!image?.originFileObj?.uid) {\n                deleteLocalImage.push(image)\n            }\n        })\n\n\n        if (!editProductSuccess && imagesUpload) {\n            imagesUpload?.images?.map(image => {\n                imageData.push(image?.id)\n            })\n        } else {\n            deleteLocalImage.map((image) => {\n\n                if (image?.uid) {\n                    imageData.push(image?.uid)\n                } else {\n                    imageData.push(image?.id)\n\n                }\n            });\n        }\n        // product type\n        const product_type = []\n\n        if (valuesForm.copy?.length > 0) {\n            const data = {\n                name_uz: \"Copy\",\n                name_ru: \"Копия\",\n                product_size: [\n                    ...valuesForm.copy\n                ]\n            }\n            product_type.push(data)\n        }\n\n        if (valuesForm.luxCopy?.length > 0) {\n            const data = {\n                name_uz: \"Lux Copy\",\n                name_ru: \"Люкс Копия\",\n                product_size: [\n                    ...valuesForm.luxCopy\n                ]\n            }\n            product_type.push(data)\n        }\n\n        if (valuesForm.original?.length > 0) {\n            const data = {\n                name_uz: \"Original\",\n                name_ru: \"Оригинал\",\n                product_size: [\n                    ...valuesForm.original\n                ]\n            }\n            product_type.push(data)\n        }\n\n\n        const data = {\n            name_uz: valuesForm.name_uz,\n            name_ru: valuesForm.name_ru,\n            the_parmufe_uz: valuesForm.the_parmufe_uz,\n            the_parmufe_ru: valuesForm.the_parmufe_ru,\n            ingredients_uz: valuesForm.ingredients_uz,\n            ingredients_ru: valuesForm.ingredients_ru,\n            scents_uz: valuesForm.scents_uz,\n            scents_ru: valuesForm.scents_ru,\n            gender: valuesForm.gender,\n            occasion: valuesForm.occasion,\n            category: valuesForm.category===\"\"? null:valuesForm.category,\n            special: valuesForm.special===\"\"? null:valuesForm.special,\n            brand: valuesForm.brand,\n            smell: valuesForm.smell,\n            image: imageData,\n            product_type\n        };\n\n        if (imagesUploadSuccess && !editProductSuccess) {\n            postProductMutate({url: '/products/product/', data});\n        } else if (isNotEditImages || imagesUploadSuccess) {\n            putProduct({url: '/products/product', data, id: editId});\n        }\n    }, [imagesUpload, valuesForm]);\n\n\n    const onFinish = (values) => {\n        const formData = new FormData();\n\n        let uploadNewImage = false;\n\n        fileListProps?.map(file => {\n            if (editProductSuccess) {\n                if (file?.originFileObj?.uid) {\n                    uploadNewImage = true;\n                    formData.append('uploaded_images', file?.originFileObj);\n                    setIsNotEditImages(false);\n                    setFileList(fileListProps);\n                } else {\n                    uploadNewImage = false;\n                    setFileList(fileListProps);\n                    setIsNotEditImages(true);\n                }\n            } else {\n                uploadNewImage = true;\n                formData.append('uploaded_images', file?.originFileObj);\n            }\n\n        })\n        if (uploadNewImage && !imagesUploadSuccess) {\n            imagesUploadMutate({url: '/products/product-image/', formData});\n        }\n\n        setValues(values);\n    };\n    const onFinishFailed = (errorInfo) => {\n        console.log('Failed:', errorInfo);\n    };\n\n    // refresh page again get data\n\n    useEffect(() => {\n        const storedValues = JSON.parse(localStorage.getItem('myFormValues'));\n        if (storedValues) {\n            storedValues.images = []\n            form.setFieldsValue(storedValues);\n        }\n\n        const handleBeforeUnload = () => {\n\n            localStorage.setItem(\n                'myFormValues',\n                JSON.stringify(form.getFieldsValue()),\n            );\n        };\n\n        window.addEventListener('beforeunload', handleBeforeUnload);\n\n        return () => {\n            localStorage.removeItem('editDataId')\n            localStorage.removeItem('myFormValues')\n            window.removeEventListener('beforeunload', handleBeforeUnload);\n        }\n    }, []);\n\n    // render category\n    const optionsGender = useMemo(() => {\n        return [\n            {\n                value: 'male',\n                label: 'Мужской',\n            },\n            {\n                value: 'female',\n                label: 'Женский',\n            }\n        ]\n    }, []);\n    const optionsOccasion = useMemo(() => {\n        return [\n            {\n                value: 'spring',\n                label: 'Весна',\n            },\n            {\n                value: 'summer',\n                label: 'Лето',\n            },\n            {\n                value: 'Осень',\n                label: 'Мужской',\n            },\n            {\n                value: 'winter',\n                label: 'Зима',\n            }\n        ]\n    }, []);\n\n    const optionsCategoryIndex = useMemo(() => {\n        const data = categoryData?.map((option) => {\n            return {\n                value: option?.id,\n                label: `${option?.name} ${option?.date}`,\n            };\n        });\n\n        const defaultData = {\n            value: \"\",\n            label: `Без категории`,\n        };\n        data?.push(defaultData)\n\n        return data\n    }, [categoryData]);\n\n    const optionsBrand = useMemo(() => {\n        return brandData?.map((option) => {\n            return {\n                value: option?.id,\n                label: option?.name_ru,\n            };\n        });\n    }, [brandData]);\n\n    const optionsSmell = useMemo(() => {\n        return smellData?.map((option) => {\n            return {\n                value: option?.id,\n                label: option?.name_ru,\n            };\n        });\n    }, [smellData]);\n\n    const optionsSpecial = useMemo(() => {\n        const data= specialData?.map((option) => {\n            return {\n                value: option?.id,\n                label: option?.title_ru,\n            };\n        });\n\n        const defaultData = {\n            value: \"\",\n            label: `Удалить из специального`,\n        };\n        data?.push(defaultData)\n\n        return data\n    }, [specialData]);\n\n    const onChange = ({fileList: newFileList}) => {\n        setFileListProps(newFileList);\n        form.setFieldsValue({image: newFileList});\n\n    };\n\n    const handleRemoveImage = (file) => {\n        if (editProductSuccess) {\n            setDeleteImage(prop=>[...prop,file]);\n\n        }\n    };\n    const onPreview = async (file) => {\n        let src = file.url;\n        if (!src) {\n            src = await new Promise((resolve) => {\n                const reader = new FileReader();\n                reader.readAsDataURL(file.originFileObj);\n                reader.onload = () => resolve(reader.result);\n            });\n        }\n        const image = new Image();\n        image.src = src;\n        const imgWindow = window.open(src);\n        imgWindow?.document.write(image.outerHTML);\n    };\n\n\n    const chooseType = (e) => {\n        setProductType(e.target.value)\n    }\n\n    return (\n        <div>\n            {imagesUploadLoading ||\n            postProductLoading ||\n            editProductLoading ||\n            putProductLoading ? (\n                <AppLoader/>\n            ) : (\n                <Form\n                    form={form}\n                    name='basic'\n                    labelCol={{\n                        span: 24,\n                    }}\n                    wrapperCol={{\n                        span: 24,\n                    }}\n                    style={{\n                        maxWidth: '100%',\n                    }}\n                    initialValues={initialValueForm}\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                    autoComplete='off'>\n                    <Title level={3}>Название и описание продукта</Title>\n                    <Row gutter={20}>\n                        <Col span={12}>\n                            <Form.Item\n                                label='Mahsulot nomi Uz'\n                                name='name_uz'\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Mahsulot nomi kiritish talab qilinadi Uz!',\n                                    },\n                                ]}>\n                                <Input/>\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                label='Наименование товара Ru'\n                                name='name_ru'\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please input your Name Ru!',\n                                    },\n                                ]}>\n                                <Input/>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row gutter={20}>\n                        <Col span={12}>\n                            <Form.Item\n                                label='Parfyumeriya haqida'\n                                name='the_parmufe_uz'\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Parfyumeriya haqida talab qilinadi!',\n                                    },\n                                ]}>\n                                <TextArea rows={4}/>\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                label='О парфюме'\n                                name='the_parmufe_ru'\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Обязательно О парфюмерии!',\n                                    },\n                                ]}>\n                                <TextArea rows={4}/>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row gutter={20}>\n                        <Col span={12}>\n                            <Form.Item\n                                label='Ingredientlar haqida'\n                                name='ingredients_uz'\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Ingredientlar haqida talab qilinadi!',\n                                    },\n                                ]}>\n                                <TextArea rows={4}/>\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                label='Об ингредиентах'\n                                name='ingredients_ru'\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Обязательно об ингредиентах!',\n                                    },\n                                ]}>\n                                <TextArea rows={4}/>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row gutter={20}>\n                        <Col span={12}>\n                            <Form.Item\n                                label='Hidlar haqida'\n                                name='scents_uz'\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Hidlar haqida talab qilinadi!',\n                                    },\n                                ]}>\n                                <TextArea rows={4}/>\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                label='О запахах'\n                                name='scents_ru'\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Обязательно о запахах!',\n                                    },\n                                ]}>\n                                <TextArea rows={4}/>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Title level={3}>Выбор к какому типу относится товар</Title>\n                    <Row gutter={20}>\n                        <Col span={12}>\n                            <Form.Item\n                                label={'Выберите пол'}\n                                name={'gender'}\n                                wrapperCol={{\n                                    span: 24,\n                                }}\n                                rules={[\n                                    {required: true, message: 'Требуется пол'},\n                                ]}>\n                                <Select\n                                    style={{\n                                        width: '100%',\n                                    }}\n                                    placeholder='Выберите одну пол'\n                                    optionLabelProp='label'\n                                    options={optionsGender}\n                                />\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                label={'Выберите повод'}\n                                name={'occasion'}\n                                wrapperCol={{\n                                    span: 24,\n                                }}\n                                rules={[\n                                    {required: true, message: 'Требуется повод'},\n                                ]}>\n                                <Select\n                                    style={{\n                                        width: '100%',\n                                    }}\n                                    placeholder='Выберите одну повод'\n                                    optionLabelProp='label'\n                                    options={optionsOccasion}\n                                />\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row gutter={20}>\n                        <Col span={12}>\n                            <Form.Item\n                                label={'Категория домашней страницы'}\n                                name={'category'}\n                                wrapperCol={{\n                                    span: 24,\n                                }}\n\n                            >\n                                <Select\n                                    style={{\n                                        width: '100%',\n                                    }}\n                                    placeholder='Выберите одну Категория'\n                                    optionLabelProp='label'\n                                    options={optionsCategoryIndex}\n                                />\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                label={'Выберите бренд'}\n                                name={'brand'}\n                                wrapperCol={{\n                                    span: 24,\n                                }}\n                                rules={[\n                                    {required: true, message: 'Требуется бренд'},\n                                ]}>\n                                <Select\n                                    style={{\n                                        width: '100%',\n                                    }}\n                                    placeholder='Выберите одну бренд'\n                                    optionLabelProp='label'\n                                    options={optionsBrand}\n                                />\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row gutter={20}>\n                        <Col span={12}>\n                            <Form.Item\n                                label={'Выберите запах'}\n                                name={'smell'}\n                                wrapperCol={{\n                                    span: 24,\n                                }}\n                                rules={[\n                                    {required: true, message: 'Требуется запах'},\n                                ]}>\n\n                                <Select\n                                    style={{\n                                        width: '100%',\n                                    }}\n                                    placeholder='Выберите одну запах'\n                                    optionLabelProp='label'\n                                    options={optionsSmell}\n                                />\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                label={'Добавить в специальный'}\n                                name={'special'}\n                                wrapperCol={{\n                                    span: 24,\n                                }}\n                                >\n\n                                <Select\n                                    style={{\n                                        width: '100%',\n                                    }}\n                                    placeholder='Добавить в специальный'\n                                    optionLabelProp='label'\n                                    options={optionsSpecial}\n                                />\n                            </Form.Item>\n                        </Col>\n\n                    </Row>\n                    <Title level={3}>Изображения товаров (можно загрузить до 3 изображений, Размер: 480x680)</Title>\n                    <Form.Item\n                        label='Загрузить изображение'\n                        name={'image'}\n                        rules={[{required: true, message: 'Пожалуйста, загрузите изображение'}]}>\n                        <ImgCrop rotationSlider>\n                            <Upload\n                                maxCount={5}\n                                fileList={fileListProps}\n                                listType='picture-card'\n                                onChange={onChange}\n                                onPreview={onPreview}\n                                beforeUpload={() => false}\n                                onRemove={handleRemoveImage}>\n                                {fileListProps?.length < 3 && '+ Upload'}\n                            </Upload>\n                        </ImgCrop>\n                    </Form.Item>\n                    <Title level={3}>Размеры и цены продукции</Title>\n                    <Form.Item label=\"Размер товара\" name=\"checkProductType\">\n                        <Radio.Group onChange={chooseType} defaultValue={'Copy'}>\n                            <Radio.Button value=\"Copy\">Copy</Radio.Button>\n                            <Radio.Button value=\"Lux Copy\">Lux Copy</Radio.Button>\n                            <Radio.Button value=\"Original\">Original</Radio.Button>\n                        </Radio.Group>\n                    </Form.Item>\n\n                    <FormListType name={'copy'} title={'Copy'} value={productType}/>\n                    <FormListType name={'luxCopy'} title={'Lux Copy'} value={productType}/>\n                    <FormListType name={'original'} title={'Original'} value={productType}/>\n\n\n                    <Button type='primary' htmlType='submit' style={{width: '100%'}}>\n                        {editProductSuccess ? 'Edit' : 'Add'}\n                    </Button>\n                </Form>\n            )}\n        </div>\n    );\n};\n\nexport default PostEditProduct;"],"names":["axios","concat","process","config","jwt","key","localStorage","getItem","error","console","log","authorization","headers","getData","url","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","sent","abrupt","stop","getDataByID","id","_callee2","_yield$axios$get2","_context2","postData","formData","_callee3","_yield$axios$post","_context3","editData","_callee4","_yield$axios$put","_context4","deleteData","_callee5","_context5","deleteImages","ids","_callee6","_context6","Title","Typography","_ref","name","title","value","_useState","useState","_useState2","_slicedToArray","logo","setLogo","useQuery","apiService","useEffect","_jsxs","className","children","_jsx","level","Form","fields","_ref2","add","remove","_Fragment","map","field","index","style","marginBottom","Space","align","label","rules","required","message","width","InputNumber","MinusCircleOutlined","onClick","fieldKey","Button","type","block","initialValueForm","name_uz","name_ru","the_parmufe_uz","the_parmufe_ru","ingredients_uz","ingredients_ru","scents_uz","scents_ru","gender","occasion","category","special","brand","smell","image","copy","luxCopy","original","_Form$useForm","form","navigate","useNavigate","editId","useSelector","state","dispatch","useDispatch","fileListProps","setFileListProps","_useState3","_useState4","fileList","setFileList","_useState5","_useState6","valuesForm","setValues","_useState7","_useState8","isNotEditImages","setIsNotEditImages","_useState9","_useState10","deleteImage","setDeleteImage","_useState11","_useState12","productType","setProductType","categoryData","brandData","smellData","specialData","_useMutation","useMutation","onSuccess","onError","obj","response","postProductMutate","mutate","postProduct","postProductLoading","isLoading","postProductSuccess","isSuccess","_useMutation2","imagesUploadMutate","imagesUpload","imagesUploadLoading","imagesUploadSuccess","_useQuery5","enabled","editProductLoading","editProductData","editProductRefetch","refetch","editProductSuccess","_useMutation3","_ref3","putProduct","putProductLoading","putData","putProductSuccess","imagesDeleteMutate","_ref4","delImage","EDIT_DATA","payload","uid","push","length","image_ids","setFieldsValue","imagesInitial","i","_editProductData$prod","product_images","_editProductData$prod2","_editProductData$prod3","_editProductData$prod4","_editProductData$prod5","editDefaultImages","location","status","product_type","_type$product_size","_type$product_size2","_type$product_size3","product_size","size","litr","price","discount","edit","brand_id","_valuesForm$copy","_valuesForm$luxCopy","_valuesForm$original","imageData","patchImagesAndInitialImages","images","_toConsumableArray","_imagesUpload$images","deleteLocalImage","_image$originFileObj","originFileObj","storedValues","JSON","parse","handleBeforeUnload","setItem","stringify","getFieldsValue","window","addEventListener","removeItem","removeEventListener","optionsGender","useMemo","optionsOccasion","optionsCategoryIndex","option","date","optionsBrand","optionsSmell","optionsSpecial","title_ru","onPreview","_ref6","file","src","imgWindow","Promise","resolve","reader","FileReader","readAsDataURL","onload","result","Image","open","document","write","outerHTML","_x","apply","arguments","AppLoader","labelCol","span","wrapperCol","maxWidth","initialValues","onFinish","values","FormData","uploadNewImage","_file$originFileObj","append","onFinishFailed","errorInfo","autoComplete","Row","gutter","Col","Input","TextArea","rows","Select","placeholder","optionLabelProp","options","ImgCrop","rotationSlider","Upload","maxCount","listType","onChange","_ref5","newFileList","beforeUpload","onRemove","prop","Radio","e","target","defaultValue","FormListType","htmlType"],"sourceRoot":""}