{"version":3,"file":"static/js/345.a708aa46.chunk.js","mappings":"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","sources":["@crema/services/apis/axios.js","@crema/utility/helper/persistence-storage.js","@crema/services/apis/api.js","pages/sample/Contact/ContactPostEdit.jsx","../node_modules/@ant-design/icons-svg/es/asn/MinusCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/MinusCircleOutlined.js","../node_modules/antd/es/col/index.js"],"sourcesContent":["import {getItem} from '../../utility/helper/persistence-storage';\nimport axios from 'axios';\n\naxios.defaults.baseURL = `${process.env.REACT_APP_API_URL}`;\n\naxios.interceptors.request.use((config) => {\n    const jwt = getItem('richtoken');\n    const authorization = jwt!==null ? `Bearer ${jwt}` : '';\n    config.headers.authorization = authorization;\n    return config;\n});\n\nexport default axios;","export const getItem=(key)=>{\n    try {\n        return localStorage.getItem(key)\n    } catch (error) {\n        console.log('Error getting data')\n    }\n}\n\nexport const setItem=(key,data)=>{\n    try {\n        localStorage.setItem(key,data)\n    } catch (error) {\n        console.log('Error saving data')\n    }\n}\nexport const removeItem=(key)=>{\n    try {\n        return localStorage.removeItem(key)\n    } catch (error) {\n        console.log('Error removing data')\n    }\n}","import axios from './axios';\n\nconst apiService = {\n    // malutmotlarni get qilish uchun url beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async getData(url) {\n        const {data} = await axios.get(url);\n        return data;\n    },\n    // faqat bitta malumot  get qilish uchun url va idsi beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async getDataByID(url, id) {\n        const {data} = await axios.get(`${url}/${id}`);\n        return data;\n    },\n    // malutmotni post qilish uchun url va yaratilgan malumot beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async postData(url, formData) {\n        const {data}= await axios.post(url, formData);\n        return data\n    },\n    // malutmotni edit qilish uchun url,id va yaratilgan malumot beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async editData(url, formData, id) {\n        const {data}= await axios.put(`${url}/${id}/`, formData)\n        return data\n    },\n    // malutmotni delete qilish uchun url va id  beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async deleteData(url, id) {\n        await axios.delete(`${url}/${id}`);\n    },\n\n    async deleteImages(url, ids) {\n        console.log()\n        await axios.delete(url, {data:ids});\n    },\n};\nexport default apiService;","import React, {useEffect} from 'react';\nimport {Button, Col, Form, Input, message, Row, Space} from \"antd\";\nimport {useMutation, useQuery} from \"react-query\";\nimport apiService from \"../../../@crema/services/apis/api\";\nimport {AppLoader} from \"../../../@crema\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {EDIT_DATA} from \"../../../shared/constants/ActionTypes\";\nimport {MinusCircleOutlined} from \"@ant-design/icons\";\n\nconst initialValueForm = {\n    name_ru:\"\",\n    name_uz:\"\",\n    contact_child: [\n        {\n            name_uz: \"\",\n            name_ru: \"\",\n            text: \"\"\n        }\n    ]\n};\n\n\n\n\n\nconst ContactPostEdit = () => {\n\n    const [form] = Form.useForm();\n    const navigate = useNavigate()\n    const {editId}=useSelector(state => state.editData)\n    const dispatch=useDispatch()\n\n\n\n\n    // query-contact\n    const {\n        mutate: postContactMutate,\n        data: postContact,\n        isLoading: postContactLoading,\n        isSuccess: postContactSuccess,\n    } = useMutation(({url, data}) => apiService.postData(url, data),{\n        onSuccess:()=>{\n\n            message.success('Success')\n        },\n        onError: (error) => {\n            for (let obj in error.response.data) {\n                message.error(`${obj}: ${error.response.data[obj][0]}`)\n            }\n        }\n    });\n\n    // query-edit\n    const {\n        isLoading: editContactLoading,\n        data: editContactData,\n        refetch: editContactRefetch,\n        isSuccess: editContactSuccess,\n    } = useQuery([\"edit-contact\", editId], () => apiService.getDataByID(\"/about/contact-father\", editId), {\n        enabled: false\n    });\n    // put-query\n    const {\n        mutate: putContact,\n        isLoading: putContactLoading,\n        data: putData,\n        isSuccess: putContactSuccess\n    } = useMutation(({\n                         url,\n                         data,\n                         id\n                     }) => apiService.editData(url, data, id),{\n        onSuccess:()=>{\n            message.success('Success')\n        },\n        onError: (error) => {\n            for (let obj in error.response.data) {\n                message.error(`${obj}: ${error.response.data[obj][0]}`)\n            }\n        }\n    });\n\n    // contact success\n    useEffect(() => {\n        if (putContactSuccess) {\n            dispatch({type:EDIT_DATA,payload:\"\"})\n        }\n\n        if (postContactSuccess || putContactSuccess) {\n\n            navigate('/contact')\n        }\n    }, [postContact,putData])\n\n\n\n\n\n    // if edit contact\n    useEffect(() => {\n        if (editId !== \"\") {\n            editContactRefetch();\n        }\n    }, [editId]);\n\n    // if no edit contact\n    useEffect(() => {\n        if (editId===\"\"){\n            form.setFieldsValue(initialValueForm)\n        }\n    }, []);\n\n\n\n\n    //edit contact\n    useEffect(()=>{\n        if (editContactSuccess){\n    const editContactChild=[]\n            editContactData?.contact_child.map(item=>{\n                const data={\n                    name_ru:item.name_ru,\n                    name_uz:item.name_uz,\n                    text:item.text,\n                }\n                editContactChild.push(data)\n            })\n\n\n        const edit={\n            name_ru:editContactData.name_ru,\n            name_uz:editContactData.name_uz,\n            contact_child: editContactChild\n        }\n            form.setFieldsValue(edit)\n        }\n\n    },[editContactData])\n\n\n\n    const onFinish = (values) => {\n\n\n\n        if (editContactData){\n            putContact({url: '/about/contact-father',data:values,id:editId})\n        }else{\n            postContactMutate({url: \"/about/contact-father/\", data:values});\n        }\n\n\n\n\n\n\n    }\n    const onFinishFailed = (errorInfo) => {\n        console.log(\"Failed:\", errorInfo);\n    };\n\n\n    // refresh page again get data\n\n  useEffect(() => {\n    const storedValues = JSON.parse(localStorage.getItem('myFormValues'));\n    if (storedValues) {\n        storedValues.images=[]\n      form.setFieldsValue(storedValues);\n    }\n\n    const handleBeforeUnload = () => {\n        \n            localStorage.setItem(\n              'myFormValues',\n              JSON.stringify(form.getFieldsValue()),\n            );\n    };\n\n    window.addEventListener('beforeunload', handleBeforeUnload);\n\n    return ()=>{\n        localStorage.removeItem('editDataId')\n        localStorage.removeItem('myFormValues')\n        window.removeEventListener('beforeunload', handleBeforeUnload);\n    }\n  }, []);\n\n\n\n\n\n    return (\n        <div>\n            {( postContactLoading ||editContactLoading ||putContactLoading) ?\n                <AppLoader/> :\n                <Form\n                    form={form}\n                    name=\"basic\"\n                    labelCol={{\n                        span: 24\n                    }}\n                    wrapperCol={{\n                        span: 24\n                    }}\n                    style={{\n                        maxWidth: \"100%\"\n                    }}\n                    initialValues={initialValueForm}\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                    autoComplete=\"off\"\n                >\n                    <Row gutter={20}>\n                        <Col span={12}>\n                            <Form.Item\n                                label=\"Контактное лицо Ru\"\n                                name=\"name_ru\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: \"Ввод Контактное лицо обязателен Ru!\"\n                                    }\n                                ]}\n                            >\n                                <Input/>\n                            </Form.Item>\n\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                label=\"Kontakt sarlavhasi Uz\"\n                                name=\"name_uz\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: \"Kontakt sarlavhasi kiritish majburiy Uz!\"\n                                    }\n                                ]}\n                            >\n                                <Input/>\n                            </Form.Item>\n\n                        </Col>\n\n                    </Row>\n\n                    <Form.List name={'contact_child'}>\n                        {(fields, {add, remove}) => (\n                            <>\n                                {fields.map((field, index) => {\n                                    return (\n                                        <div key={field.fieldKey} style={{marginBottom: 20}}>\n                                            <Space align={\"start\"}>\n\n\n                                                <Form.Item\n                                                    label={`Bog'lanish uchun ${index + 1}`}\n                                                    name={[field.name, \"name_uz\"]}\n                                                    rules={[\n                                                        {required: true, message: \"Bog'lanish uchun malumot kiriting\"}\n                                                    ]}\n                                                    style={{width: \"100%\"}}\n                                                >\n                                                    <Input/>\n                                                </Form.Item>\n                                                <Form.Item\n                                                    label={`Связаться ${index + 1}`}\n                                                    name={[field.name, \"name_ru\"]}\n                                                    rules={[\n                                                        {required: true, message: \"Связаться обязателен.\"}\n                                                    ]}\n                                                    style={{width: \"100%\"}}\n                                                >\n                                                    <Input/>\n                                                </Form.Item>\n\n                                            </Space>\n\n\n                                            <MinusCircleOutlined\n                                                onClick={() => remove(field.name)}/>\n                                        </div>\n\n                                    );\n                                })}\n                                <Form.Item>\n                                    <Button type=\"dashed\" onClick={() => add()} block>\n                                        Add Item\n                                    </Button>\n                                </Form.Item>\n\n                            </>\n                        )}\n                    </Form.List>\n                        <Button type=\"primary\" htmlType=\"submit\" style={{width: \"100%\",marginTop:\"20px\"}}>\n                    {\n                            editContactSuccess ? 'Edit' : 'Add'\n                        }\n                    </Button>\n                </Form>\n            }\n        </div>\n    );\n};\n\nexport default ContactPostEdit;","// This icon file is generated automatically.\nvar MinusCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M696 480H328c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h368c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"minus-circle\", \"theme\": \"outlined\" };\nexport default MinusCircleOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport MinusCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/MinusCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar MinusCircleOutlined = function MinusCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: MinusCircleOutlinedSvg\n  }));\n};\nMinusCircleOutlined.displayName = 'MinusCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(MinusCircleOutlined);","import { Col } from '../grid';\nexport default Col;"],"names":["axios","concat","process","config","jwt","key","localStorage","getItem","error","console","log","authorization","headers","getData","url","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","sent","abrupt","stop","getDataByID","id","_callee2","_yield$axios$get2","_context2","postData","formData","_callee3","_yield$axios$post","_context3","editData","_callee4","_yield$axios$put","_context4","deleteData","_callee5","_context5","deleteImages","ids","_callee6","_context6","initialValueForm","name_ru","name_uz","contact_child","text","_Form$useForm","Form","form","_slicedToArray","navigate","useNavigate","editId","useSelector","state","dispatch","useDispatch","_useMutation","useMutation","_ref","apiService","onSuccess","message","onError","obj","response","postContactMutate","mutate","postContact","postContactLoading","isLoading","postContactSuccess","isSuccess","_useQuery","useQuery","enabled","editContactLoading","editContactData","editContactRefetch","refetch","editContactSuccess","_useMutation2","_ref2","putContact","putContactLoading","putData","putContactSuccess","useEffect","type","EDIT_DATA","payload","setFieldsValue","editContactChild","map","item","push","edit","storedValues","JSON","parse","images","handleBeforeUnload","setItem","stringify","getFieldsValue","window","addEventListener","removeItem","removeEventListener","_jsx","children","AppLoader","_jsxs","name","labelCol","span","wrapperCol","style","maxWidth","initialValues","onFinish","values","onFinishFailed","errorInfo","autoComplete","Row","gutter","Col","label","rules","required","Input","fields","_ref3","add","remove","_Fragment","field","index","marginBottom","Space","align","width","MinusCircleOutlined","onClick","fieldKey","Button","block","htmlType","marginTop","props","ref","React","AntdIcon","_objectSpread","icon","MinusCircleOutlinedSvg","displayName"],"sourceRoot":""}