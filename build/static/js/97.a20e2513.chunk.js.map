{"version":3,"file":"static/js/97.a20e2513.chunk.js","mappings":"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","sources":["@crema/services/apis/axios.js","@crema/utility/helper/persistence-storage.js","@crema/services/apis/api.js","pages/sample/Special/SpecialPostEdit.jsx","../node_modules/antd/es/col/index.js"],"sourcesContent":["import {getItem} from '../../utility/helper/persistence-storage';\nimport axios from 'axios';\n\naxios.defaults.baseURL = `${process.env.REACT_APP_API_URL}`;\n\naxios.interceptors.request.use((config) => {\n    const jwt = getItem('richtoken');\n    const authorization = jwt!==null ? `Bearer ${jwt}` : '';\n    config.headers.authorization = authorization;\n    return config;\n});\n\nexport default axios;","export const getItem=(key)=>{\n    try {\n        return localStorage.getItem(key)\n    } catch (error) {\n        console.log('Error getting data')\n    }\n}\n\nexport const setItem=(key,data)=>{\n    try {\n        localStorage.setItem(key,data)\n    } catch (error) {\n        console.log('Error saving data')\n    }\n}\nexport const removeItem=(key)=>{\n    try {\n        return localStorage.removeItem(key)\n    } catch (error) {\n        console.log('Error removing data')\n    }\n}","import axios from './axios';\n\nconst apiService = {\n    // malutmotlarni get qilish uchun url beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async getData(url) {\n        const {data} = await axios.get(url);\n        return data;\n    },\n    // faqat bitta malumot  get qilish uchun url va idsi beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async getDataByID(url, id) {\n        const {data} = await axios.get(`${url}/${id}`);\n        return data;\n    },\n    // malutmotni post qilish uchun url va yaratilgan malumot beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async postData(url, formData) {\n        const {data}= await axios.post(url, formData);\n        return data\n    },\n    // malutmotni edit qilish uchun url,id va yaratilgan malumot beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async editData(url, formData, id) {\n        const {data}= await axios.put(`${url}/${id}/`, formData)\n        return data\n    },\n    // malutmotni delete qilish uchun url va id  beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async deleteData(url, id) {\n        await axios.delete(`${url}/${id}`);\n    },\n\n    async deleteImages(url, ids) {\n        await axios.delete(url, {data:ids});\n    },\n};\nexport default apiService;","import React, {useEffect,  useState} from 'react';\nimport {Button, Col, Form, message, Row, Upload,  Input} from \"antd\";\nimport {useMutation, useQuery} from \"react-query\";\nimport apiService from \"../../../@crema/services/apis/api\";\nimport {AppLoader} from \"../../../@crema\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {EDIT_DATA} from \"../../../shared/constants/ActionTypes\";\nimport ImgCrop from \"antd-img-crop\";\n\n\nconst initialValueForm = {\n    image_uz: \"\",\n    image_ru: \"\",\n    title_ru: \"\",\n    title_uz: \"\",\n\n\n};\n\n\nconst SpecialPostEdit = () => {\n\n    const [form] = Form.useForm();\n    const navigate = useNavigate()\n    const {editId} = useSelector(state => state.editData)\n    const dispatch = useDispatch()\n\n\n    const [fileListPropsUz, setFileListPropsUz] = useState([]);\n    const [fileListPropsRu, setFileListPropsRu] = useState([]);\n\n\n    // query-special\n    const {\n        mutate: postSpecialMutate,\n        data: postSpecial,\n        isLoading: postSpecialLoading,\n        isSuccess: postSpecialSuccess,\n    } = useMutation(({url, data}) => apiService.postData(url, data), {\n        onSuccess: () => {\n\n            message.success('Success')\n        },\n        onError: (error) => {\n            for (let obj in error.response.data) {\n                message.error(`${obj}: ${error.response.data[obj][0]}`)\n            }\n        }\n    });\n\n\n\n    // query-edit\n    const {\n        isLoading: editSpecialLoading,\n        data: editSpecialData,\n        refetch: editSpecialRefetch,\n        isSuccess: editSpecialSuccess,\n    } = useQuery([\"edit-special\", editId], () => apiService.getDataByID(\"products/special\", editId), {\n        enabled: false\n    });\n    // put-query\n    const {\n        mutate: putSpecial,\n        isLoading: putSpecialLoading,\n        data: putData,\n        isSuccess: putSpecialSuccess\n    } = useMutation(({\n                         url,\n                         data,\n                         id\n                     }) => apiService.editData(url, data, id), {\n        onSuccess: () => {\n            message.success('Success')\n        },\n        onError: (error) => {\n\n            for (let obj in error.response.data) {\n                message.error(`${obj}: ${error.response.data[obj][0]}`)\n            }\n\n        }\n    });\n\n    // special success\n    useEffect(() => {\n        if (putSpecialSuccess) {\n            dispatch({type: EDIT_DATA, payload: \"\"})\n        }\n\n        if (postSpecialSuccess || putSpecialSuccess) {\n\n            navigate('/special')\n        }\n    }, [postSpecial, putData])\n\n\n    // if edit special\n    useEffect(() => {\n        if (editId !== \"\") {\n            editSpecialRefetch();\n        }\n    }, [editId]);\n\n    // if no edit special\n    useEffect(() => {\n        if (editId === \"\") {\n            form.setFieldsValue(initialValueForm)\n        }\n    }, []);\n\n\n    //edit special\n    useEffect(() => {\n        if (editSpecialSuccess) {\n\n            const imageInitialUz = [\n                {\n                    uid: editSpecialData?.id,\n                    name: editSpecialData?.id,\n                    status: 'done',\n                    url: editSpecialData?.image_uz,\n                },\n            ]\n            const imageInitialRu = [\n                {\n                    uid: editSpecialData?.id,\n                    name: editSpecialData?.id,\n                    status: 'done',\n                    url: editSpecialData?.image_ru,\n                },\n            ]\n            const edit = {\n                title_uz: editSpecialData.title_uz,\n                title_ru: editSpecialData.title_ru,\n                image_uz: editSpecialData.image_uz,\n                image_ru: editSpecialData.image_ru,\n            }\n\n\n            setFileListPropsUz(imageInitialUz)\n            setFileListPropsRu(imageInitialRu)\n            form.setFieldsValue(edit)\n        }\n\n    }, [editSpecialData])\n\n\n    const onFinish = (values) => {\n\n        const formData = new FormData();\n\n        formData.append('title_uz', values.title_uz);\n        formData.append('title_ru', values.title_ru);\n\n        if (fileListPropsUz[0]?.originFileObj) {\n            formData.append('image_uz', fileListPropsUz[0]?.originFileObj);\n        }\n        if (fileListPropsRu[0]?.originFileObj) {\n            formData.append('image_ru', fileListPropsRu[0]?.originFileObj);\n        }\n\n\n\n        if (editSpecialData) {\n            putSpecial({url: '/products/special', data: formData, id: editId})\n        } else {\n            postSpecialMutate({url: \"/products/special/\", data: formData});\n        }\n\n\n    }\n    const onFinishFailed = (errorInfo) => {\n        console.log(\"Failed:\", errorInfo);\n    };\n\n\n    // refresh page again get data\n\n    useEffect(() => {\n        const storedValues = JSON.parse(localStorage.getItem('myFormValues'));\n        if (storedValues) {\n            storedValues.images = []\n            form.setFieldsValue(storedValues);\n        }\n\n        const handleBeforeUnload = () => {\n\n            localStorage.setItem(\n                'myFormValues',\n                JSON.stringify(form.getFieldsValue()),\n            );\n        };\n\n        window.addEventListener('beforeunload', handleBeforeUnload);\n\n        return () => {\n            localStorage.removeItem('editDataId')\n            localStorage.removeItem('myFormValues')\n            window.removeEventListener('beforeunload', handleBeforeUnload);\n        }\n    }, []);\n\n\n    // image\n    const onChangeUz = ({fileList: newFileList}) => {\n        setFileListPropsUz(newFileList);\n        form.setFieldsValue({image_uz: newFileList});\n    };\n    const onChangeRu = ({fileList: newFileList}) => {\n        setFileListPropsRu(newFileList);\n        form.setFieldsValue({image_ru: newFileList});\n    };\n\n\n    const onPreview = async (file) => {\n        let src = file.url;\n        if (!src) {\n            src = await new Promise((resolve) => {\n                const reader = new FileReader();\n                reader.readAsDataURL(file.originFileObj);\n                reader.onload = () => resolve(reader.result);\n            });\n        }\n        const image = new Image();\n        image.src = src;\n        const imgWindow = window.open(src);\n        imgWindow?.document.write(image.outerHTML);\n    };\n\n\n\n\n    return (\n        <div>\n            {(postSpecialLoading || editSpecialLoading || putSpecialLoading) ?\n                <AppLoader/> :\n                <Form\n                    form={form}\n                    name=\"basic\"\n                    labelCol={{\n                        span: 24\n                    }}\n                    wrapperCol={{\n                        span: 24\n                    }}\n                    style={{\n                        maxWidth: \"100%\"\n                    }}\n                    initialValues={initialValueForm}\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                    autoComplete=\"off\"\n                >\n                    <Row gutter={20}>\n                        <Col span={12}>\n                            <Form.Item\n                                label={'Specialning nomini kiriting'}\n                                name={'title_uz'}\n                                rules={[{required: true, message: 'Nomi talab qilinadi'}]}\n                                wrapperCol={{\n                                span: 24,\n                            }}\n                                >\n                                <Input/>\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                label={'Введите название спец.'}\n                                name={'title_ru'}\n                                rules={[{required: true, message: 'Требуется название спец'}]}\n                                wrapperCol={{\n                                    span: 24,\n                                }}\n                                >\n                               <Input/>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n\n                    <Row gutter={20}>\n                        <Col span={12}>\n                            <Form.Item\n                                label='Изображение Ru'\n                                name={'image_ru'}\n                                rules={[{required: true, message: 'Требуется загрузка изображения Ru'}]}>\n                                <ImgCrop rotationSlider>\n                                    <Upload\n                                        maxCount={1}\n                                        fileList={fileListPropsUz}\n                                        listType='picture-card'\n                                        onChange={onChangeUz}\n                                        onPreview={onPreview}\n                                        beforeUpload={() => false}\n                                    >\n                                        {fileListPropsUz.length > 0 ? \"\" : \"Upload\"}\n                                    </Upload>\n                                </ImgCrop>\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                label='Изображение Uz'\n                                name={'image_uz'}\n                                rules={[{required: true, message: 'Требуется загрузка изображения Uz'}]}>\n                                <ImgCrop rotationSlider>\n                                    <Upload\n                                        maxCount={1}\n                                        fileList={fileListPropsRu}\n                                        listType='picture-card'\n                                        onChange={onChangeRu}\n                                        onPreview={onPreview}\n                                        beforeUpload={() => false}\n                                    >\n                                        {fileListPropsRu.length > 0 ? \"\" : \"Upload\"}\n                                    </Upload>\n                                </ImgCrop>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n\n                    <Button type=\"primary\" htmlType=\"submit\" style={{width: \"100%\", marginTop: \"20px\"}}>\n                        {\n                            editSpecialSuccess ? 'Edit' : 'Add'\n                        }\n                    </Button>\n                </Form>\n            }\n        </div>\n    );\n};\n\nexport default SpecialPostEdit;","import { Col } from '../grid';\nexport default Col;"],"names":["axios","concat","process","config","jwt","key","localStorage","getItem","error","console","log","authorization","headers","getData","url","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","sent","abrupt","stop","getDataByID","id","_callee2","_yield$axios$get2","_context2","postData","formData","_callee3","_yield$axios$post","_context3","editData","_callee4","_yield$axios$put","_context4","deleteData","_callee5","_context5","deleteImages","ids","_callee6","_context6","initialValueForm","image_uz","image_ru","title_ru","title_uz","_Form$useForm","Form","form","_slicedToArray","navigate","useNavigate","editId","useSelector","state","dispatch","useDispatch","_useState","useState","_useState2","fileListPropsUz","setFileListPropsUz","_useState3","_useState4","fileListPropsRu","setFileListPropsRu","_useMutation","useMutation","_ref","apiService","onSuccess","message","onError","obj","response","postSpecialMutate","mutate","postSpecial","postSpecialLoading","isLoading","postSpecialSuccess","isSuccess","_useQuery","useQuery","enabled","editSpecialLoading","editSpecialData","editSpecialRefetch","refetch","editSpecialSuccess","_useMutation2","_ref2","putSpecial","putSpecialLoading","putData","putSpecialSuccess","useEffect","type","EDIT_DATA","payload","setFieldsValue","imageInitialUz","uid","name","status","imageInitialRu","edit","storedValues","JSON","parse","images","handleBeforeUnload","setItem","stringify","getFieldsValue","window","addEventListener","removeItem","removeEventListener","onPreview","_ref5","file","src","image","imgWindow","Promise","resolve","reader","FileReader","readAsDataURL","originFileObj","onload","result","Image","open","document","write","outerHTML","_x","apply","arguments","_jsx","children","AppLoader","_jsxs","labelCol","span","wrapperCol","style","maxWidth","initialValues","onFinish","values","_fileListPropsUz$","_fileListPropsRu$","_fileListPropsUz$2","_fileListPropsRu$2","FormData","append","onFinishFailed","errorInfo","autoComplete","Row","gutter","Col","label","rules","required","Input","ImgCrop","rotationSlider","Upload","maxCount","fileList","listType","onChange","_ref3","newFileList","beforeUpload","length","_ref4","Button","htmlType","width","marginTop"],"sourceRoot":""}