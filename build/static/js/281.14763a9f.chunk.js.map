{"version":3,"file":"static/js/281.14763a9f.chunk.js","mappings":"kLAGAA,IAAAA,SAAAA,QAAsB,GAAAC,OAAMC,oCAE5BF,IAAAA,aAAAA,QAAAA,KAA+B,SAACG,GAC5B,IAAMC,ECNW,SAACC,GAClB,IACI,OAAOC,aAAaC,QAAQF,EAChC,CAAE,MAAOG,GACLC,QAAQC,IAAI,qBAChB,CACJ,CDAgBH,CAAQ,aACdI,EAAsB,OAANP,EAAU,UAAAH,OAAaG,GAAQ,GAErD,OADAD,EAAOS,QAAQD,cAAgBA,EACxBR,CACX,IAEA,MAAeH,IE0Bf,EApCmB,CAGTa,QAAO,SAACC,GAAM,OAADC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAA,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACMxB,EAAAA,IAAUc,GAAK,KAAD,EAAxB,OAAwBK,EAAAG,EAAAG,KAA5BL,EAAID,EAAJC,KAAIE,EAAAI,OAAA,SACJN,GAAI,wBAAAE,EAAAK,OAAA,GAAAT,EAAA,IAFIH,EAGnB,EAGMa,YAAW,SAACd,EAAKe,GAAK,OAADd,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAA,SAAAa,IAAA,IAAAC,EAAAX,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAW,GAAA,cAAAA,EAAAT,KAAAS,EAAAR,MAAA,cAAAQ,EAAAR,KAAA,EACFxB,EAAAA,IAAU,GAADC,OAAIa,EAAG,KAAAb,OAAI4B,IAAM,KAAD,EAAnC,OAAmCE,EAAAC,EAAAP,KAAvCL,EAAIW,EAAJX,KAAIY,EAAAN,OAAA,SACJN,GAAI,wBAAAY,EAAAL,OAAA,GAAAG,EAAA,IAFYf,EAG3B,EAGMkB,SAAQ,SAACnB,EAAKoB,GAAW,OAADnB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAA,SAAAkB,IAAA,IAAAC,EAAAhB,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,cAAAa,EAAAb,KAAA,EACNxB,EAAAA,KAAWc,EAAKoB,GAAU,KAAD,EAAlC,OAAkCE,EAAAC,EAAAZ,KAAtCL,EAAIgB,EAAJhB,KAAIiB,EAAAX,OAAA,SACJN,GAAI,wBAAAiB,EAAAV,OAAA,GAAAQ,EAAA,IAFepB,EAG9B,EAGMuB,SAAQ,SAACxB,EAAKoB,EAAUL,GAAK,OAADd,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAA,SAAAsB,IAAA,IAAAC,EAAApB,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,cAAAiB,EAAAjB,KAAA,EACVxB,EAAAA,IAAU,GAADC,OAAIa,EAAG,KAAAb,OAAI4B,EAAE,KAAKK,GAAS,OAA7C,OAA6CM,EAAAC,EAAAhB,KAAjDL,EAAIoB,EAAJpB,KAAIqB,EAAAf,OAAA,SACJN,GAAI,wBAAAqB,EAAAd,OAAA,GAAAY,EAAA,IAFmBxB,EAGlC,EAGM2B,WAAU,SAAC5B,EAAKe,GAAK,OAADd,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAA,SAAA0B,IAAA,OAAA3B,EAAAA,EAAAA,KAAAK,MAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,cAAAoB,EAAApB,KAAA,EAChBxB,EAAAA,OAAa,GAADC,OAAIa,EAAG,KAAAb,OAAI4B,IAAM,KAAD,mBAAAe,EAAAjB,OAAA,GAAAgB,EAAA,IADZ5B,EAE1B,EAEM8B,aAAY,SAAC/B,EAAKgC,GAAM,OAAD/B,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAA,SAAA8B,IAAA,OAAA/B,EAAAA,EAAAA,KAAAK,MAAA,SAAA2B,GAAA,cAAAA,EAAAzB,KAAAyB,EAAAxB,MAAA,OACZ,OAAbf,QAAQC,MAAKsC,EAAAxB,KAAA,EACPxB,EAAAA,OAAac,EAAK,CAACM,KAAK0B,IAAM,KAAD,mBAAAE,EAAArB,OAAA,GAAAoB,EAAA,IAFVhC,EAG7B,E,uPC/BIkC,EAAUC,EAAAA,EAAAA,MA0DlB,EAtDqB,WACnB,IAAAC,GAAiCC,EAAAA,EAAAA,UAC/B,eACA,kBAAMC,EAAAA,EAAAA,QAAmB,WAAW,GACpC,CACEC,QAAS,SAAC9C,GAER+C,EAAAA,GAAAA,MAAc/C,EAChB,IAPGY,EAAI+B,EAAJ/B,KAAKoC,EAAOL,EAAPK,QAAQC,EAASN,EAATM,UAUZC,GAAYC,EAAAA,EAAAA,UAAQ,WACtB,GAAIF,GAAaD,EACb,MAAO,GAGX,IAAMI,EAAU,IAAIC,IAEhB,OAAJzC,QAAI,IAAJA,GAAAA,EAAM0C,SAAQ,SAACC,GACX,IAAMC,EAAgB,IAAIC,KAAU,OAALF,QAAK,IAALA,OAAK,EAALA,EAAOG,WAAWC,qBAEtC,OAAPP,QAAO,IAAPA,GAAAA,EAASQ,IAAIJ,GACN,OAAPJ,QAAO,IAAPA,GAAAA,EAASS,IAAIL,EAAeJ,EAAQU,IAAIN,GAAiB,GAElD,OAAPJ,QAAO,IAAPA,GAAAA,EAASS,IAAIL,EAAe,EAEpC,IAEA,IAEmCO,EAF7BC,EAAS,GAAGC,GAAAC,EAAAA,EAAAA,GAEUd,GAAO,IAAnC,IAAAa,EAAAE,MAAAJ,EAAAE,EAAAG,KAAAC,MAAqC,CAAC,IAADC,GAAAC,EAAAA,EAAAA,GAAAR,EAAAS,MAAA,GAAzBC,EAAIH,EAAA,GAAEI,EAAKJ,EAAA,GACnBN,EAAOW,KAAK,CAAEF,KAAAA,EAAMC,MAAAA,GACxB,CAAC,OAAAE,GAAAX,EAAAY,EAAAD,EAAA,SAAAX,EAAAa,GAAA,CAED,OAAOd,CACX,GAAG,CAACpD,EAAMqC,EAAWD,IAEvB,OACE+B,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACxC,EAAK,CAACyC,KAAK,KAAIF,SAAC,4IACjBC,EAAAA,EAAAA,KAACE,EAAAA,EAAmB,CAACC,MAAM,OAAOC,OAAQ,IAAIL,UAC7CD,EAAAA,EAAAA,MAACO,EAAAA,EAAQ,CAAE1E,KAAMsC,EAAU8B,SAAA,EAClBC,EAAAA,EAAAA,KAACM,EAAAA,EAAa,CAACC,gBAAgB,SAC/BP,EAAAA,EAAAA,KAACQ,EAAAA,EAAK,CAACC,QAAQ,UACfT,EAAAA,EAAAA,KAACU,EAAAA,EAAK,KACNV,EAAAA,EAAAA,KAACW,EAAAA,EAAO,KACRX,EAAAA,EAAAA,KAACY,EAAAA,EAAM,KACPZ,EAAAA,EAAAA,KAACa,EAAAA,EAAG,CAACJ,QAAQ,QAAQK,KAAK,mBAK1C,ECxDQtD,EAAUC,EAAAA,EAAAA,MA0DlB,EAtDmB,WACf,IAAAC,GAAiCC,EAAAA,EAAAA,UAC7B,iBACA,kBAAMC,EAAAA,EAAAA,QAAmB,aAAa,GACtC,CACIC,QAAS,SAAC9C,GAEN+C,EAAAA,GAAAA,MAAc/C,EAClB,IAPDY,EAAI+B,EAAJ/B,KAAKoC,EAAOL,EAAPK,QAAQC,EAASN,EAATM,UAUdC,GAAYC,EAAAA,EAAAA,UAAQ,WACtB,GAAIF,GAAaD,EACb,MAAO,GAGX,IAAMI,EAAU,IAAIC,IAEhB,OAAJzC,QAAI,IAAJA,GAAAA,EAAM0C,SAAQ,SAACC,GACX,IAAMC,EAAgB,IAAIC,KAAU,OAALF,QAAK,IAALA,OAAK,EAALA,EAAOG,WAAWC,qBAEtC,OAAPP,QAAO,IAAPA,GAAAA,EAASQ,IAAIJ,GACN,OAAPJ,QAAO,IAAPA,GAAAA,EAASS,IAAIL,EAAeJ,EAAQU,IAAIN,GAAiB,GAElD,OAAPJ,QAAO,IAAPA,GAAAA,EAASS,IAAIL,EAAe,EAEpC,IAEA,IAEmCO,EAF7BC,EAAS,GAAGC,GAAAC,EAAAA,EAAAA,GAEUd,GAAO,IAAnC,IAAAa,EAAAE,MAAAJ,EAAAE,EAAAG,KAAAC,MAAqC,CAAC,IAADC,GAAAC,EAAAA,EAAAA,GAAAR,EAAAS,MAAA,GAAzBC,EAAIH,EAAA,GAAEI,EAAKJ,EAAA,GACnBN,EAAOW,KAAK,CAAEF,KAAAA,EAAMC,MAAAA,GACxB,CAAC,OAAAE,GAAAX,EAAAY,EAAAD,EAAA,SAAAX,EAAAa,GAAA,CAED,OAAOd,CACX,GAAG,CAACpD,EAAMqC,EAAWD,IAErB,OACI+B,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACIC,EAAAA,EAAAA,KAACxC,EAAK,CAACyC,KAAK,KAAIF,SAAC,qKACjBC,EAAAA,EAAAA,KAACE,EAAAA,EAAmB,CAACC,MAAM,OAAOC,OAAQ,IAAIL,UAC1CD,EAAAA,EAAAA,MAACO,EAAAA,EAAQ,CAAE1E,KAAMsC,EAAU8B,SAAA,EACvBC,EAAAA,EAAAA,KAACM,EAAAA,EAAa,CAACC,gBAAgB,SAC/BP,EAAAA,EAAAA,KAACQ,EAAAA,EAAK,CAACC,QAAQ,UACfT,EAAAA,EAAAA,KAACU,EAAAA,EAAK,KACNV,EAAAA,EAAAA,KAACW,EAAAA,EAAO,KACRX,EAAAA,EAAAA,KAACY,EAAAA,EAAM,KACPZ,EAAAA,EAAAA,KAACa,EAAAA,EAAG,CAACJ,QAAQ,QAAQK,KAAK,mBAK9C,ECxDQtD,EAAUC,EAAAA,EAAAA,MA0DlB,EAtDqB,WACnB,IAAAC,GAAiCC,EAAAA,EAAAA,UAC7B,aACA,kBAAMC,EAAAA,EAAAA,QAAmB,SAAS,GAClC,CACEC,QAAS,SAAC9C,GAER+C,EAAAA,GAAAA,MAAc/C,EAChB,IAPCY,EAAI+B,EAAJ/B,KAAKoC,EAAOL,EAAPK,QAAQC,EAASN,EAATM,UAUdC,GAAYC,EAAAA,EAAAA,UAAQ,WACxB,GAAIF,GAAaD,EACf,MAAO,GAGT,IAAMI,EAAU,IAAIC,IAEhB,OAAJzC,QAAI,IAAJA,GAAAA,EAAM0C,SAAQ,SAACC,GACb,IAAMC,EAAgB,IAAIC,KAAU,OAALF,QAAK,IAALA,OAAK,EAALA,EAAOG,WAAWC,qBAEtC,OAAPP,QAAO,IAAPA,GAAAA,EAASQ,IAAIJ,GACR,OAAPJ,QAAO,IAAPA,GAAAA,EAASS,IAAIL,EAAeJ,EAAQU,IAAIN,GAAiB,GAElD,OAAPJ,QAAO,IAAPA,GAAAA,EAASS,IAAIL,EAAe,EAEhC,IAEA,IAEmCO,EAF7BC,EAAS,GAAGC,GAAAC,EAAAA,EAAAA,GAEUd,GAAO,IAAnC,IAAAa,EAAAE,MAAAJ,EAAAE,EAAAG,KAAAC,MAAqC,CAAC,IAADC,GAAAC,EAAAA,EAAAA,GAAAR,EAAAS,MAAA,GAAzBC,EAAIH,EAAA,GAAEI,EAAKJ,EAAA,GACrBN,EAAOW,KAAK,CAAEF,KAAAA,EAAMC,MAAAA,GACtB,CAAC,OAAAE,GAAAX,EAAAY,EAAAD,EAAA,SAAAX,EAAAa,GAAA,CAED,OAAOd,CACT,GAAG,CAACpD,EAAMqC,EAAWD,IAErB,OACI+B,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACxC,EAAK,CAACyC,KAAK,KAAIF,SAAC,gLACjBC,EAAAA,EAAAA,KAACE,EAAAA,EAAmB,CAACC,MAAM,OAAOC,OAAQ,IAAIL,UAC5CD,EAAAA,EAAAA,MAACO,EAAAA,EAAQ,CAAE1E,KAAMsC,EAAU8B,SAAA,EACzBC,EAAAA,EAAAA,KAACM,EAAAA,EAAa,CAACC,gBAAgB,SAC/BP,EAAAA,EAAAA,KAACQ,EAAAA,EAAK,CAACC,QAAQ,UACfT,EAAAA,EAAAA,KAACU,EAAAA,EAAK,KACNV,EAAAA,EAAAA,KAACW,EAAAA,EAAO,KACRX,EAAAA,EAAAA,KAACY,EAAAA,EAAM,KACPZ,EAAAA,EAAAA,KAACa,EAAAA,EAAG,CAACJ,QAAQ,QAAQK,KAAK,mBAKtC,EC1CA,EAVkB,WACd,OACIhB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACGC,EAAAA,EAAAA,KAACe,EAAY,KACbf,EAAAA,EAAAA,KAACgB,EAAc,KACdhB,EAAAA,EAAAA,KAACiB,EAAU,MAGvB,C","sources":["@crema/services/apis/axios.js","@crema/utility/helper/persistence-storage.js","@crema/services/apis/api.js","pages/sample/Dashboard/dealersChart.jsx","pages/sample/Dashboard/testDriveChart.jsx","pages/sample/Dashboard/OrderChart.jsx","pages/sample/Dashboard/index.jsx"],"sourcesContent":["import {getItem} from '../../utility/helper/persistence-storage';\nimport axios from 'axios';\n\naxios.defaults.baseURL = `${process.env.REACT_APP_API_URL}`;\n\naxios.interceptors.request.use((config) => {\n    const jwt = getItem('richtoken');\n    const authorization = jwt!==null ? `Bearer ${jwt}` : '';\n    config.headers.authorization = authorization;\n    return config;\n});\n\nexport default axios;","export const getItem=(key)=>{\n    try {\n        return localStorage.getItem(key)\n    } catch (error) {\n        console.log('Error getting data')\n    }\n}\n\nexport const setItem=(key,data)=>{\n    try {\n        localStorage.setItem(key,data)\n    } catch (error) {\n        console.log('Error saving data')\n    }\n}\nexport const removeItem=(key)=>{\n    try {\n        return localStorage.removeItem(key)\n    } catch (error) {\n        console.log('Error removing data')\n    }\n}","import axios from './axios';\n\nconst apiService = {\n    // malutmotlarni get qilish uchun url beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async getData(url) {\n        const {data} = await axios.get(url);\n        return data;\n    },\n    // faqat bitta malumot  get qilish uchun url va idsi beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async getDataByID(url, id) {\n        const {data} = await axios.get(`${url}/${id}`);\n        return data;\n    },\n    // malutmotni post qilish uchun url va yaratilgan malumot beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async postData(url, formData) {\n        const {data}= await axios.post(url, formData);\n        return data\n    },\n    // malutmotni edit qilish uchun url,id va yaratilgan malumot beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async editData(url, formData, id) {\n        const {data}= await axios.put(`${url}/${id}/`, formData)\n        return data\n    },\n    // malutmotni delete qilish uchun url va id  beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async deleteData(url, id) {\n        await axios.delete(`${url}/${id}`);\n    },\n\n    async deleteImages(url, ids) {\n        console.log()\n        await axios.delete(url, {data:ids});\n    },\n};\nexport default apiService;","import { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend ,ResponsiveContainer} from 'recharts';\nimport { useQuery} from \"react-query\";\nimport apiService from \"../../../@crema/services/apis/api\";\nimport {message,Typography } from 'antd';\nimport { useMemo } from 'react';\nconst { Title } = Typography;\n\n\n\nconst DealersChart = () => {\n  const {data,isError,isLoading} = useQuery(\n    'dealers-get',\n    () => apiService.getData('/dealers'),\n    {\n      onError: (error) => {\n\n        message.error(error);\n      },\n    },\n  );\n    const dataOrder = useMemo(() => {\n        if (isLoading || isError) {\n            return []; // Return an empty array or handle error state\n        }\n\n        const dataMap = new Map();\n\n        data?.forEach((entry) => {\n            const createdAtDate = new Date(entry?.createdAt).toLocaleDateString();\n\n            if (dataMap?.has(createdAtDate)) {\n                dataMap?.set(createdAtDate, dataMap.get(createdAtDate) + 1);\n            } else {\n                dataMap?.set(createdAtDate, 1);\n            }\n        });\n\n        const result = [];\n\n        for (const [date, count] of dataMap) {\n            result.push({ date, count });\n        }\n\n        return result;\n    }, [data, isLoading, isError]);\n\n  return (\n    <div>\n      <Title type='h2'>Статистика заявок дилера</Title>\n      <ResponsiveContainer width=\"100%\" height={300}>\n       <BarChart  data={dataOrder}>\n                <CartesianGrid strokeDasharray=\"3 6\" />\n                <XAxis dataKey=\"date\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Bar dataKey=\"count\" fill=\"#8884d8\" />\n            </BarChart>\n            </ResponsiveContainer>\n    </div>\n  )\n}\n\nexport default DealersChart","import { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend ,ResponsiveContainer} from 'recharts';\nimport { useQuery} from \"react-query\";\nimport apiService from \"../../../@crema/services/apis/api\";\nimport {message,Typography } from 'antd';\nimport { useMemo } from 'react';\nconst { Title } = Typography;\n\n\n\nconst OrderChart = () => {\n    const {data,isError,isLoading} = useQuery(\n        'testDrive-get',\n        () => apiService.getData('/testDrive'),\n        {\n            onError: (error) => {\n\n                message.error(error);\n            },\n        },\n    );\n    const dataOrder = useMemo(() => {\n        if (isLoading || isError) {\n            return []; // Return an empty array or handle error state\n        }\n\n        const dataMap = new Map();\n\n        data?.forEach((entry) => {\n            const createdAtDate = new Date(entry?.createdAt).toLocaleDateString();\n\n            if (dataMap?.has(createdAtDate)) {\n                dataMap?.set(createdAtDate, dataMap.get(createdAtDate) + 1);\n            } else {\n                dataMap?.set(createdAtDate, 1);\n            }\n        });\n\n        const result = [];\n\n        for (const [date, count] of dataMap) {\n            result.push({ date, count });\n        }\n\n        return result;\n    }, [data, isLoading, isError]);\n\n    return (\n        <div>\n            <Title type='h2'>Статистика заявок тест-драйва</Title>\n            <ResponsiveContainer width=\"100%\" height={300}>\n                <BarChart  data={dataOrder}>\n                    <CartesianGrid strokeDasharray=\"3 6\" />\n                    <XAxis dataKey=\"date\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Legend />\n                    <Bar dataKey=\"count\" fill=\"#82ca9d\" />\n                </BarChart>\n            </ResponsiveContainer>\n        </div>\n    )\n}\n\nexport default OrderChart","import { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend ,ResponsiveContainer} from 'recharts';\nimport { useQuery} from \"react-query\";\nimport apiService from \"../../../@crema/services/apis/api\";\nimport {message,Typography } from 'antd';\nimport { useMemo } from 'react';\nconst { Title } = Typography;\n\n\n\nconst DealersChart = () => {\n  const {data,isError,isLoading} = useQuery(\n      'order-get',\n      () => apiService.getData('/order'),\n      {\n        onError: (error) => {\n\n          message.error(error);\n        },\n      },\n  );\n  const dataOrder = useMemo(() => {\n    if (isLoading || isError) {\n      return []; // Return an empty array or handle error state\n    }\n\n    const dataMap = new Map();\n\n    data?.forEach((entry) => {\n      const createdAtDate = new Date(entry?.createdAt).toLocaleDateString();\n\n      if (dataMap?.has(createdAtDate)) {\n        dataMap?.set(createdAtDate, dataMap.get(createdAtDate) + 1);\n      } else {\n        dataMap?.set(createdAtDate, 1);\n      }\n    });\n\n    const result = [];\n\n    for (const [date, count] of dataMap) {\n      result.push({ date, count });\n    }\n\n    return result;\n  }, [data, isLoading, isError]);\n\n  return (\n      <div>\n        <Title type='h2'>Статистика заказов автомобилей</Title>\n        <ResponsiveContainer width=\"100%\" height={300}>\n          <BarChart  data={dataOrder}>\n            <CartesianGrid strokeDasharray=\"3 6\" />\n            <XAxis dataKey=\"date\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <Bar dataKey=\"count\" fill=\"#8884d8\" />\n          </BarChart>\n        </ResponsiveContainer>\n      </div>\n  )\n}\n\nexport default DealersChart","import React from 'react';\nimport DealersChart from './dealersChart';\nimport TestDriveChart from './testDriveChart';\nimport OrderChart from './OrderChart';\n\n\n\n\n\nconst Dashboard = () => {\n    return (\n        <div>\n           <DealersChart/>\n           <TestDriveChart/>\n            <OrderChart/>\n        </div>\n    );\n};\n\nexport default Dashboard;"],"names":["axios","concat","process","config","jwt","key","localStorage","getItem","error","console","log","authorization","headers","getData","url","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","sent","abrupt","stop","getDataByID","id","_callee2","_yield$axios$get2","_context2","postData","formData","_callee3","_yield$axios$post","_context3","editData","_callee4","_yield$axios$put","_context4","deleteData","_callee5","_context5","deleteImages","ids","_callee6","_context6","Title","Typography","_useQuery","useQuery","apiService","onError","message","isError","isLoading","dataOrder","useMemo","dataMap","Map","forEach","entry","createdAtDate","Date","createdAt","toLocaleDateString","has","set","get","_step","result","_iterator","_createForOfIteratorHelper","s","n","done","_step$value","_slicedToArray","value","date","count","push","err","e","f","_jsxs","children","_jsx","type","ResponsiveContainer","width","height","BarChart","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","fill","DealersChart","TestDriveChart","OrderChart"],"sourceRoot":""}