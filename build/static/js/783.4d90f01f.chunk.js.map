{"version":3,"file":"static/js/783.4d90f01f.chunk.js","mappings":"kLAGAA,IAAAA,SAAAA,QAAsB,GAAAC,OAAMC,mCAE5BF,IAAAA,aAAAA,QAAAA,KAA+B,SAACG,GAC5B,IAAMC,ECNW,SAACC,GAClB,IACI,OAAOC,aAAaC,QAAQF,EAChC,CAAE,MAAOG,GACLC,QAAQC,IAAI,qBAChB,CACJ,CDAgBH,CAAQ,aACdI,EAAsB,OAANP,EAAU,UAAAH,OAAaG,GAAQ,GAErD,OADAD,EAAOS,QAAQD,cAAgBA,EACxBR,CACX,IAEA,MAAeH,IE0Bf,EApCmB,CAGTa,QAAO,SAACC,GAAM,OAADC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAA,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACMxB,EAAAA,IAAUc,GAAK,KAAD,EAAxB,OAAwBK,EAAAG,EAAAG,KAA5BL,EAAID,EAAJC,KAAIE,EAAAI,OAAA,SACJN,GAAI,wBAAAE,EAAAK,OAAA,GAAAT,EAAA,IAFIH,EAGnB,EAGMa,YAAW,SAACd,EAAKe,GAAK,OAADd,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAA,SAAAa,IAAA,IAAAC,EAAAX,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAW,GAAA,cAAAA,EAAAT,KAAAS,EAAAR,MAAA,cAAAQ,EAAAR,KAAA,EACFxB,EAAAA,IAAU,GAADC,OAAIa,EAAG,KAAAb,OAAI4B,IAAM,KAAD,EAAnC,OAAmCE,EAAAC,EAAAP,KAAvCL,EAAIW,EAAJX,KAAIY,EAAAN,OAAA,SACJN,GAAI,wBAAAY,EAAAL,OAAA,GAAAG,EAAA,IAFYf,EAG3B,EAGMkB,SAAQ,SAACnB,EAAKoB,GAAW,OAADnB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAA,SAAAkB,IAAA,IAAAC,EAAAhB,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,cAAAa,EAAAb,KAAA,EACNxB,EAAAA,KAAWc,EAAKoB,GAAU,KAAD,EAAlC,OAAkCE,EAAAC,EAAAZ,KAAtCL,EAAIgB,EAAJhB,KAAIiB,EAAAX,OAAA,SACJN,GAAI,wBAAAiB,EAAAV,OAAA,GAAAQ,EAAA,IAFepB,EAG9B,EAGMuB,SAAQ,SAACxB,EAAKoB,EAAUL,GAAK,OAADd,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAA,SAAAsB,IAAA,IAAAC,EAAApB,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,cAAAiB,EAAAjB,KAAA,EACVxB,EAAAA,IAAU,GAADC,OAAIa,EAAG,KAAAb,OAAI4B,EAAE,KAAKK,GAAS,OAA7C,OAA6CM,EAAAC,EAAAhB,KAAjDL,EAAIoB,EAAJpB,KAAIqB,EAAAf,OAAA,SACJN,GAAI,wBAAAqB,EAAAd,OAAA,GAAAY,EAAA,IAFmBxB,EAGlC,EAGM2B,WAAU,SAAC5B,EAAKe,GAAK,OAADd,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAA,SAAA0B,IAAA,OAAA3B,EAAAA,EAAAA,KAAAK,MAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,cAAAoB,EAAApB,KAAA,EAChBxB,EAAAA,OAAa,GAADC,OAAIa,EAAG,KAAAb,OAAI4B,IAAM,KAAD,mBAAAe,EAAAjB,OAAA,GAAAgB,EAAA,IADZ5B,EAE1B,EAEM8B,aAAY,SAAC/B,EAAKgC,GAAM,OAAD/B,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAA,SAAA8B,IAAA,OAAA/B,EAAAA,EAAAA,KAAAK,MAAA,SAAA2B,GAAA,cAAAA,EAAAzB,KAAAyB,EAAAxB,MAAA,OACZ,OAAbf,QAAQC,MAAKsC,EAAAxB,KAAA,EACPxB,EAAAA,OAAac,EAAK,CAACM,KAAK0B,IAAM,KAAD,mBAAAE,EAAArB,OAAA,GAAAoB,EAAA,IAFVhC,EAG7B,E,mPCzBEkC,EAAmB,CACrBC,QAAS,GACTC,QAAS,GACTC,MAAO,IA6QX,UAxQsB,WAElB,IAAAC,EAAeC,EAAAA,EAAAA,UAARC,GAAsBC,EAAAA,EAAAA,GAAAH,EAAA,GAAlB,GACLI,GAAWC,EAAAA,EAAAA,MACVC,GAAUC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMvB,QAAQ,IAA7CqB,OACDG,GAAWC,EAAAA,EAAAA,MAGjBC,GAA0CC,EAAAA,EAAAA,UAAS,IAAGC,GAAAV,EAAAA,EAAAA,GAAAQ,EAAA,GAA/CG,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAGtCG,GAKIC,EAAAA,EAAAA,cAAY,SAAAC,GAAA,IAAEzD,EAAGyD,EAAHzD,IAAKM,EAAImD,EAAJnD,KAAI,OAAMoD,EAAAA,EAAAA,SAAoB1D,EAAKM,EAAK,GAAE,CAC7DqD,UAAW,WAEPC,EAAAA,GAAAA,QAAgB,UACpB,EACAC,QAAS,SAACnE,GACN,IAAK,IAAIoE,KAAOpE,EAAMqE,SAASzD,KAC3BsD,EAAAA,GAAAA,MAAc,GAADzE,OAAI2E,EAAG,MAAA3E,OAAKO,EAAMqE,SAASzD,KAAKwD,GAAK,IAE1D,IAbQE,EAAeT,EAAvBU,OACMC,EAASX,EAAfjD,KACW6D,EAAgBZ,EAA3Ba,UACWC,EAAgBd,EAA3Be,UAcJC,GAKIC,EAAAA,EAAAA,UAAS,CAAC,aAAc3B,IAAS,kBAAMa,EAAAA,EAAAA,YAAuB,kBAAmBb,EAAO,GAAE,CAC1F4B,SAAS,IALEC,EAAgBH,EAA3BH,UACMO,EAAaJ,EAAnBjE,KACSsE,EAAgBL,EAAzBM,QACWC,EAAgBP,EAA3BD,UAKJS,GAKIvB,EAAAA,EAAAA,cAAY,SAAAwB,GAAA,IACKhF,EAAGgF,EAAHhF,IACAM,EAAI0E,EAAJ1E,KACAS,EAAEiE,EAAFjE,GAAE,OACA2C,EAAAA,EAAAA,SAAoB1D,EAAKM,EAAMS,EAAG,GAAE,CACvD4C,UAAW,WACPC,EAAAA,GAAAA,QAAgB,UACpB,EACAC,QAAS,SAACnE,GAEN,IAAK,IAAIoE,KAAOpE,EAAMqE,SAASzD,KAC3BsD,EAAAA,GAAAA,MAAc,GAADzE,OAAI2E,EAAG,MAAA3E,OAAKO,EAAMqE,SAASzD,KAAKwD,GAAK,IAG1D,IAlBQmB,EAAQF,EAAhBd,OACWiB,EAAeH,EAA1BX,UACMe,EAAOJ,EAAbzE,KACW8E,EAAeL,EAA1BT,WAmBJe,EAAAA,EAAAA,YAAU,WACFD,GACApC,EAAS,CAACsC,KAAMC,EAAAA,GAAWC,QAAS,MAGpCnB,GAAoBe,IAEpBzC,EAAS,SAEjB,GAAG,CAACuB,EAAWiB,KAMfE,EAAAA,EAAAA,YAAU,WACS,KAAXxC,GACA+B,GAER,GAAG,CAAC/B,KAGJwC,EAAAA,EAAAA,YAAU,WACS,KAAXxC,GACAJ,EAAKgD,eAAetD,EAE5B,GAAG,KAIHkD,EAAAA,EAAAA,YAAU,WACN,GAAIP,EAAkB,CAElB,IAAMY,EAAe,CACjB,CACIC,IAAkB,OAAbhB,QAAa,IAAbA,OAAa,EAAbA,EAAe5D,GACpB6E,KAAmB,OAAbjB,QAAa,IAAbA,OAAa,EAAbA,EAAe5D,GACrB8E,OAAQ,OACR7F,IAAkB,OAAb2E,QAAa,IAAbA,OAAa,EAAbA,EAAerC,QAGtBwD,EAAO,CACT1D,QAASuC,EAAcvC,QACvBC,QAASsC,EAActC,QACvBC,MAAOqC,EAAcrC,OAGzBgB,EAAiBoC,GACjBjD,EAAKgD,eAAeK,EACxB,CAEJ,GAAG,CAACnB,KA6BJU,EAAAA,EAAAA,YAAU,WACN,IAAMU,EAAeC,KAAKC,MAAMzG,aAAaC,QAAQ,iBACjDsG,IACAA,EAAaG,OAAS,GACtBzD,EAAKgD,eAAeM,IAGxB,IAAMI,EAAqB,WAEvB3G,aAAa4G,QACT,eACAJ,KAAKK,UAAU5D,EAAK6D,kBAE5B,EAIA,OAFAC,OAAOC,iBAAiB,eAAgBL,GAEjC,WACH3G,aAAaiH,WAAW,cACxBjH,aAAaiH,WAAW,gBACxBF,OAAOG,oBAAoB,eAAgBP,EAC/C,CACJ,GAAG,IAIH,IAMMQ,EAAS,eAAAC,GAAA3G,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOyG,GAAI,IAAAC,EAAAxE,EAAAyE,EAAA,OAAA7G,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACN,GAAfoG,EAAMD,EAAK7G,IACN,CAADQ,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EACQ,IAAIsG,SAAQ,SAACC,GACrB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAcP,EAAKQ,eAC1BH,EAAOI,OAAS,kBAAML,EAAQC,EAAOK,OAAQ,CACjD,IAAG,KAAD,EAJFT,EAAGtG,EAAAG,KAAA,QAMD2B,EAAQ,IAAIkF,OACZV,IAAMA,EAEH,QADHC,EAAYR,OAAOkB,KAAKX,UACrB,IAATC,GAAAA,EAAWW,SAASC,MAAMrF,EAAMsF,WAAW,wBAAApH,EAAAK,OAAA,GAAAT,EAAA,KAC9C,gBAbcyH,GAAA,OAAAjB,EAAAkB,MAAA,KAAAC,UAAA,KAcf,OACIC,EAAAA,EAAAA,KAAA,OAAAC,SACM9D,GAAoBO,GAAoBQ,GACtC8C,EAAAA,EAAAA,KAACE,EAAAA,GAAS,KACVC,EAAAA,EAAAA,MAAC3F,EAAAA,EAAI,CACDC,KAAMA,EACNmD,KAAK,QACLwC,SAAU,CACNC,KAAM,IAEVC,WAAY,CACRD,KAAM,IAEVE,MAAO,CACHC,SAAU,QAEdC,cAAetG,EACfuG,SAzFC,SAACC,GAAY,IAADC,EAOYC,EAL/BzH,EAAW,IAAI0H,UAErB1H,EAAS2H,OAAO,UAAWJ,EAAOvG,SAClChB,EAAS2H,OAAO,UAAWJ,EAAOtG,SAEd,QAApBuG,EAAIvF,EAAc,UAAE,IAAAuF,GAAhBA,EAAkBvB,gBAClBjG,EAAS2H,OAAO,QAAyB,QAAlBF,EAAExF,EAAc,UAAE,IAAAwF,OAAA,EAAhBA,EAAkBxB,eAG3C1C,EACAM,EAAS,CAACjF,IAAK,kBAAmBM,KAAMc,EAAUL,GAAI8B,IAEtDmB,EAAgB,CAAChE,IAAK,mBAAoBM,KAAMc,GAIxD,EAwEgB4H,eAvEO,SAACC,GACpBtJ,QAAQC,IAAI,UAAWqJ,EAC3B,EAsEgBC,aAAa,MAAKjB,SAAA,EAElBE,EAAAA,EAAAA,MAACgB,EAAAA,EAAG,CAACC,OAAQ,GAAGnB,SAAA,EACZD,EAAAA,EAAAA,KAACqB,EAAAA,EAAG,CAAChB,KAAM,GAAGJ,UACVD,EAAAA,EAAAA,KAACxF,EAAAA,EAAAA,KAAS,CACN8G,MAAM,UACN1D,KAAK,UACL2D,MAAO,CAAC,CAACC,UAAU,EAAM5F,QAAS,uCAAuCqE,UAGzED,EAAAA,EAAAA,KAACyB,EAAAA,EAAK,SAIdzB,EAAAA,EAAAA,KAACqB,EAAAA,EAAG,CAAChB,KAAM,GAAGJ,UACVD,EAAAA,EAAAA,KAACxF,EAAAA,EAAAA,KAAS,CACN8G,MAAM,wBACN1D,KAAK,UACL2D,MAAO,CAAC,CAACC,UAAU,EAAM5F,QAAS,mHAAyBqE,UAE3DD,EAAAA,EAAAA,KAACyB,EAAAA,EAAK,YAOlBzB,EAAAA,EAAAA,KAACmB,EAAAA,EAAG,CAACC,OAAQ,GAAGnB,UACZD,EAAAA,EAAAA,KAACxF,EAAAA,EAAAA,KAAS,CACN8G,MAAM,0GACN1D,KAAM,QACN2D,MAAO,CAAC,CAACC,UAAU,EAAM5F,QAAS,oNAA0CqE,UAC5ED,EAAAA,EAAAA,KAAC0B,EAAAA,EAAO,CAACC,gBAAc,EAAA1B,UACnBD,EAAAA,EAAAA,KAAC4B,EAAAA,EAAM,CACHC,SAAU,EACVC,SAAUzG,EACV0G,SAAS,eACTC,SA5Ef,SAAHC,GAAiC,IAAlBC,EAAWD,EAArBH,SACfxG,EAAiB4G,GACjBzH,EAAKgD,eAAe,CAACnD,MAAO4H,GAChC,EA0EgCvD,UAAWA,EACXwD,aAAc,kBAAM,CAAK,EAAClC,SAEzB5E,EAAc+G,OAAS,EAAI,GAAK,kBAMjDpC,EAAAA,EAAAA,KAACqC,EAAAA,EAAM,CAAC/E,KAAK,UAAUgF,SAAS,SAAS/B,MAAO,CAACgC,MAAO,OAAQC,UAAW,QAAQvC,SAE3EnD,EAAmB,OAAS,YAOxD,C,uCCxRA,IAAeuE,EAAG,C","sources":["@crema/services/apis/axios.js","@crema/utility/helper/persistence-storage.js","@crema/services/apis/api.js","pages/sample/Brand/BrandPostEdit.jsx","../node_modules/antd/es/col/index.js"],"sourcesContent":["import {getItem} from '../../utility/helper/persistence-storage';\nimport axios from 'axios';\n\naxios.defaults.baseURL = `${process.env.REACT_APP_API_URL}`;\n\naxios.interceptors.request.use((config) => {\n    const jwt = getItem('richtoken');\n    const authorization = jwt!==null ? `Bearer ${jwt}` : '';\n    config.headers.authorization = authorization;\n    return config;\n});\n\nexport default axios;","export const getItem=(key)=>{\n    try {\n        return localStorage.getItem(key)\n    } catch (error) {\n        console.log('Error getting data')\n    }\n}\n\nexport const setItem=(key,data)=>{\n    try {\n        localStorage.setItem(key,data)\n    } catch (error) {\n        console.log('Error saving data')\n    }\n}\nexport const removeItem=(key)=>{\n    try {\n        return localStorage.removeItem(key)\n    } catch (error) {\n        console.log('Error removing data')\n    }\n}","import axios from './axios';\n\nconst apiService = {\n    // malutmotlarni get qilish uchun url beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async getData(url) {\n        const {data} = await axios.get(url);\n        return data;\n    },\n    // faqat bitta malumot  get qilish uchun url va idsi beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async getDataByID(url, id) {\n        const {data} = await axios.get(`${url}/${id}`);\n        return data;\n    },\n    // malutmotni post qilish uchun url va yaratilgan malumot beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async postData(url, formData) {\n        const {data}= await axios.post(url, formData);\n        return data\n    },\n    // malutmotni edit qilish uchun url,id va yaratilgan malumot beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async editData(url, formData, id) {\n        const {data}= await axios.put(`${url}/${id}/`, formData)\n        return data\n    },\n    // malutmotni delete qilish uchun url va id  beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async deleteData(url, id) {\n        await axios.delete(`${url}/${id}`);\n    },\n\n    async deleteImages(url, ids) {\n        console.log()\n        await axios.delete(url, {data:ids});\n    },\n};\nexport default apiService;","import React, {useEffect, useState} from 'react';\nimport {Button, Col, Form, Input, message, Row, Upload} from \"antd\";\nimport {useMutation, useQuery} from \"react-query\";\nimport apiService from \"../../../@crema/services/apis/api\";\nimport {AppLoader} from \"../../../@crema\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {EDIT_DATA} from \"../../../shared/constants/ActionTypes\";\nimport ImgCrop from \"antd-img-crop\";\n\n\nconst initialValueForm = {\n    name_uz: \"\",\n    name_ru: \"\",\n    image: \"\",\n\n};\n\n\nconst BrandPostEdit = () => {\n\n    const [form] = Form.useForm();\n    const navigate = useNavigate()\n    const {editId} = useSelector(state => state.editData)\n    const dispatch = useDispatch()\n\n\n    const [fileListProps, setFileListProps] = useState([]);\n\n    // query-brand\n    const {\n        mutate: postBrandMutate,\n        data: postBrand,\n        isLoading: postBrandLoading,\n        isSuccess: postBrandSuccess,\n    } = useMutation(({url, data}) => apiService.postData(url, data), {\n        onSuccess: () => {\n\n            message.success('Success')\n        },\n        onError: (error) => {\n            for (let obj in error.response.data) {\n                message.error(`${obj}: ${error.response.data[obj][0]}`)\n            }\n        }\n    });\n\n    // query-edit\n    const {\n        isLoading: editBrandLoading,\n        data: editBrandData,\n        refetch: editBrandRefetch,\n        isSuccess: editBrandSuccess,\n    } = useQuery([\"edit-brand\", editId], () => apiService.getDataByID(\"/products/brand\", editId), {\n        enabled: false\n    });\n    // put-query\n    const {\n        mutate: putBrand,\n        isLoading: putBrandLoading,\n        data: putData,\n        isSuccess: putBrandSuccess\n    } = useMutation(({\n                         url,\n                         data,\n                         id\n                     }) => apiService.editData(url, data, id), {\n        onSuccess: () => {\n            message.success('Success')\n        },\n        onError: (error) => {\n\n            for (let obj in error.response.data) {\n                message.error(`${obj}: ${error.response.data[obj][0]}`)\n            }\n\n        }\n    });\n\n    // brand success\n    useEffect(() => {\n        if (putBrandSuccess) {\n            dispatch({type: EDIT_DATA, payload: \"\"})\n        }\n\n        if (postBrandSuccess || putBrandSuccess) {\n\n            navigate('/brand')\n        }\n    }, [postBrand, putData])\n\n\n\n\n    // if edit brand\n    useEffect(() => {\n        if (editId !== \"\") {\n            editBrandRefetch();\n        }\n    }, [editId]);\n\n    // if no edit brand\n    useEffect(() => {\n        if (editId === \"\") {\n            form.setFieldsValue(initialValueForm)\n        }\n    }, []);\n\n\n    //edit brand\n    useEffect(() => {\n        if (editBrandSuccess) {\n\n            const imageInitial = [\n                {\n                    uid: editBrandData?.id,\n                    name: editBrandData?.id,\n                    status: 'done',\n                    url: editBrandData?.image,\n                },\n            ]\n            const edit = {\n                name_uz: editBrandData.name_uz,\n                name_ru: editBrandData.name_ru,\n                image: editBrandData.image,\n            }\n\n            setFileListProps(imageInitial)\n            form.setFieldsValue(edit)\n        }\n\n    }, [editBrandData])\n\n\n    const onFinish = (values) => {\n\n        const formData = new FormData();\n\n        formData.append('name_uz', values.name_uz);\n        formData.append('name_ru', values.name_ru);\n\n        if (fileListProps[0]?.originFileObj) {\n            formData.append('image', fileListProps[0]?.originFileObj);\n        }\n\n        if (editBrandData) {\n            putBrand({url: '/products/brand', data: formData, id: editId})\n        } else {\n            postBrandMutate({url: \"/products/brand/\", data: formData});\n        }\n\n\n    }\n    const onFinishFailed = (errorInfo) => {\n        console.log(\"Failed:\", errorInfo);\n    };\n\n\n    // refresh page again get data\n\n    useEffect(() => {\n        const storedValues = JSON.parse(localStorage.getItem('myFormValues'));\n        if (storedValues) {\n            storedValues.images = []\n            form.setFieldsValue(storedValues);\n        }\n\n        const handleBeforeUnload = () => {\n\n            localStorage.setItem(\n                'myFormValues',\n                JSON.stringify(form.getFieldsValue()),\n            );\n        };\n\n        window.addEventListener('beforeunload', handleBeforeUnload);\n\n        return () => {\n            localStorage.removeItem('editDataId')\n            localStorage.removeItem('myFormValues')\n            window.removeEventListener('beforeunload', handleBeforeUnload);\n        }\n    }, []);\n\n\n    // image\n    const onChange = ({fileList: newFileList}) => {\n        setFileListProps(newFileList);\n        form.setFieldsValue({image: newFileList});\n    };\n\n\n    const onPreview = async (file) => {\n        let src = file.url;\n        if (!src) {\n            src = await new Promise((resolve) => {\n                const reader = new FileReader();\n                reader.readAsDataURL(file.originFileObj);\n                reader.onload = () => resolve(reader.result);\n            });\n        }\n        const image = new Image();\n        image.src = src;\n        const imgWindow = window.open(src);\n        imgWindow?.document.write(image.outerHTML);\n    };\n    return (\n        <div>\n            {(postBrandLoading || editBrandLoading || putBrandLoading) ?\n                <AppLoader/> :\n                <Form\n                    form={form}\n                    name=\"basic\"\n                    labelCol={{\n                        span: 24\n                    }}\n                    wrapperCol={{\n                        span: 24\n                    }}\n                    style={{\n                        maxWidth: \"100%\"\n                    }}\n                    initialValues={initialValueForm}\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                    autoComplete=\"off\"\n                >\n                    <Row gutter={20}>\n                        <Col span={12}>\n                            <Form.Item\n                                label=\"Name Uz\"\n                                name=\"name_uz\"\n                                rules={[{required: true, message: 'Brand nomi kiritish talab qilinadi'}]}\n\n                            >\n                                <Input/>\n                            </Form.Item>\n\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                label=\"Имя Ru\"\n                                name=\"name_ru\"\n                                rules={[{required: true, message: 'Требуется Имя бренда'}]}\n                            >\n                                <Input/>\n                            </Form.Item>\n\n                        </Col>\n\n                    </Row>\n\n                    <Row gutter={20}>\n                        <Form.Item\n                            label='Изображение бренда'\n                            name={'image'}\n                            rules={[{required: true, message: 'Требуется загрузка Изображение бренда'}]}>\n                            <ImgCrop rotationSlider>\n                                <Upload\n                                    maxCount={1}\n                                    fileList={fileListProps}\n                                    listType='picture-card'\n                                    onChange={onChange}\n                                    onPreview={onPreview}\n                                    beforeUpload={() => false}\n                                >\n                                    {fileListProps.length > 0 ? \"\" : \"Upload\"}\n                                </Upload>\n                            </ImgCrop>\n                        </Form.Item>\n                    </Row>\n\n                    <Button type=\"primary\" htmlType=\"submit\" style={{width: \"100%\", marginTop: \"20px\"}}>\n                        {\n                            editBrandSuccess ? 'Edit' : 'Add'\n                        }\n                    </Button>\n                </Form>\n            }\n        </div>\n    );\n};\n\nexport default BrandPostEdit;","import { Col } from '../grid';\nexport default Col;"],"names":["axios","concat","process","config","jwt","key","localStorage","getItem","error","console","log","authorization","headers","getData","url","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","sent","abrupt","stop","getDataByID","id","_callee2","_yield$axios$get2","_context2","postData","formData","_callee3","_yield$axios$post","_context3","editData","_callee4","_yield$axios$put","_context4","deleteData","_callee5","_context5","deleteImages","ids","_callee6","_context6","initialValueForm","name_uz","name_ru","image","_Form$useForm","Form","form","_slicedToArray","navigate","useNavigate","editId","useSelector","state","dispatch","useDispatch","_useState","useState","_useState2","fileListProps","setFileListProps","_useMutation","useMutation","_ref","apiService","onSuccess","message","onError","obj","response","postBrandMutate","mutate","postBrand","postBrandLoading","isLoading","postBrandSuccess","isSuccess","_useQuery","useQuery","enabled","editBrandLoading","editBrandData","editBrandRefetch","refetch","editBrandSuccess","_useMutation2","_ref2","putBrand","putBrandLoading","putData","putBrandSuccess","useEffect","type","EDIT_DATA","payload","setFieldsValue","imageInitial","uid","name","status","edit","storedValues","JSON","parse","images","handleBeforeUnload","setItem","stringify","getFieldsValue","window","addEventListener","removeItem","removeEventListener","onPreview","_ref4","file","src","imgWindow","Promise","resolve","reader","FileReader","readAsDataURL","originFileObj","onload","result","Image","open","document","write","outerHTML","_x","apply","arguments","_jsx","children","AppLoader","_jsxs","labelCol","span","wrapperCol","style","maxWidth","initialValues","onFinish","values","_fileListProps$","_fileListProps$2","FormData","append","onFinishFailed","errorInfo","autoComplete","Row","gutter","Col","label","rules","required","Input","ImgCrop","rotationSlider","Upload","maxCount","fileList","listType","onChange","_ref3","newFileList","beforeUpload","length","Button","htmlType","width","marginTop"],"sourceRoot":""}