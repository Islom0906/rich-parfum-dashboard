{"version":3,"file":"static/js/967.e9ed8b40.chunk.js","mappings":"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","sources":["@crema/services/apis/axios.js","@crema/utility/helper/persistence-storage.js","@crema/services/apis/api.js","pages/sample/Logo/LogoPostEdit.jsx"],"sourcesContent":["import {getItem} from '../../utility/helper/persistence-storage';\nimport axios from 'axios';\n\naxios.defaults.baseURL = `${process.env.REACT_APP_API_URL}`;\n\naxios.interceptors.request.use((config) => {\n    const jwt = getItem('richtoken');\n    const authorization = jwt!==null ? `Bearer ${jwt}` : '';\n    config.headers.authorization = authorization;\n    return config;\n});\n\nexport default axios;","export const getItem=(key)=>{\n    try {\n        return localStorage.getItem(key)\n    } catch (error) {\n        console.log('Error getting data')\n    }\n}\n\nexport const setItem=(key,data)=>{\n    try {\n        localStorage.setItem(key,data)\n    } catch (error) {\n        console.log('Error saving data')\n    }\n}\nexport const removeItem=(key)=>{\n    try {\n        return localStorage.removeItem(key)\n    } catch (error) {\n        console.log('Error removing data')\n    }\n}","import axios from './axios';\n\nconst apiService = {\n    // malutmotlarni get qilish uchun url beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async getData(url) {\n        const {data} = await axios.get(url);\n        return data;\n    },\n    // faqat bitta malumot  get qilish uchun url va idsi beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async getDataByID(url, id) {\n        const {data} = await axios.get(`${url}/${id}`);\n        return data;\n    },\n    // malutmotni post qilish uchun url va yaratilgan malumot beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async postData(url, formData) {\n        const {data}= await axios.post(url, formData);\n        return data\n    },\n    // malutmotni edit qilish uchun url,id va yaratilgan malumot beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async editData(url, formData, id) {\n        const {data}= await axios.put(`${url}/${id}/`, formData)\n        return data\n    },\n    // malutmotni delete qilish uchun url va id  beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async deleteData(url, id) {\n        await axios.delete(`${url}/${id}`);\n    },\n\n    async deleteImages(url, ids) {\n        console.log()\n        await axios.delete(url, {data:ids});\n    },\n};\nexport default apiService;","import React, {useEffect, useState} from 'react';\nimport {Button, Form,  message, Row, Upload} from \"antd\";\nimport {useMutation, useQuery} from \"react-query\";\nimport apiService from \"../../../@crema/services/apis/api\";\nimport {AppLoader} from \"../../../@crema\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {EDIT_DATA} from \"../../../shared/constants/ActionTypes\";\nimport ImgCrop from \"antd-img-crop\";\n\n\nconst initialValueForm = {\n    logo: \"\",\n};\n\n\nconst LogoPostEdit = () => {\n\n    const [form] = Form.useForm();\n    const navigate = useNavigate()\n    const {editId} = useSelector(state => state.editData)\n    const dispatch = useDispatch()\n\n\n    const [fileListProps, setFileListProps] = useState([]);\n\n    // query-logo\n    const {\n        mutate: postLogoMutate,\n        data: postLogo,\n        isLoading: postLogoLoading,\n        isSuccess: postLogoSuccess,\n    } = useMutation(({url, data}) => apiService.postData(url, data), {\n        onSuccess: () => {\n\n            message.success('Success')\n        },\n        onError: (error) => {\n            for (let obj in error.response.data) {\n                message.error(`${obj}: ${error.response.data[obj][0]}`)\n            }\n        }\n    });\n\n    // query-edit\n    const {\n        isLoading: editLogoLoading,\n        data: editLogoData,\n        refetch: editLogoRefetch,\n        isSuccess: editLogoSuccess,\n    } = useQuery([\"edit-logo\", editId], () => apiService.getDataByID(\"/products/site-logo\", editId), {\n        enabled: false\n    });\n    // put-query\n    const {\n        mutate: putLogo,\n        isLoading: putLogoLoading,\n        data: putData,\n        isSuccess: putLogoSuccess\n    } = useMutation(({\n                         url,\n                         data,\n                         id\n                     }) => apiService.editData(url, data, id), {\n        onSuccess: () => {\n            message.success('Success')\n        },\n        onError: (error) => {\n\n            for (let obj in error.response.data) {\n                message.error(`${obj}: ${error.response.data[obj][0]}`)\n            }\n\n        }\n    });\n\n    // logo success\n    useEffect(() => {\n        if (putLogoSuccess) {\n            dispatch({type: EDIT_DATA, payload: \"\"})\n        }\n\n        if (postLogoSuccess || putLogoSuccess) {\n\n            navigate('/logo')\n        }\n    }, [postLogo, putData])\n\n\n\n\n    // if edit logo\n    useEffect(() => {\n        if (editId !== \"\") {\n            editLogoRefetch();\n        }\n    }, [editId]);\n\n    // if no edit logo\n    useEffect(() => {\n        if (editId === \"\") {\n            form.setFieldsValue(initialValueForm)\n        }\n    }, []);\n\n\n    //edit logo\n    useEffect(() => {\n        if (editLogoSuccess) {\n\n            const imageInitial = [\n                {\n                    uid: editLogoData?.id,\n                    name: editLogoData?.id,\n                    status: 'done',\n                    url: editLogoData?.logo,\n                },\n            ]\n            const edit = {\n                logo: editLogoData.logo,\n            }\n\n            setFileListProps(imageInitial)\n            form.setFieldsValue(edit)\n        }\n\n    }, [editLogoData])\n\n\n    const onFinish = () => {\n\n        const formData = new FormData();\n\n\n        if (fileListProps[0]?.originFileObj) {\n            formData.append('logo', fileListProps[0]?.originFileObj);\n        }\n\n        if (editLogoData) {\n            putLogo({url: '/products/site-logo', data: formData, id: editId})\n        } else {\n            postLogoMutate({url: \"/products/site-logo/\", data: formData});\n        }\n\n\n    }\n    const onFinishFailed = (errorInfo) => {\n        console.log(\"Failed:\", errorInfo);\n    };\n\n\n    // refresh page again get data\n\n    useEffect(() => {\n        const storedValues = JSON.parse(localStorage.getItem('myFormValues'));\n        if (storedValues) {\n            storedValues.images = []\n            form.setFieldsValue(storedValues);\n        }\n\n        const handleBeforeUnload = () => {\n\n            localStorage.setItem(\n                'myFormValues',\n                JSON.stringify(form.getFieldsValue()),\n            );\n        };\n\n        window.addEventListener('beforeunload', handleBeforeUnload);\n\n        return () => {\n            localStorage.removeItem('editDataId')\n            localStorage.removeItem('myFormValues')\n            window.removeEventListener('beforeunload', handleBeforeUnload);\n        }\n    }, []);\n\n\n    // image\n    const onChange = ({fileList: newFileList}) => {\n        setFileListProps(newFileList);\n        form.setFieldsValue({logo: newFileList});\n    };\n\n\n    const onPreview = async (file) => {\n        let src = file.url;\n        if (!src) {\n            src = await new Promise((resolve) => {\n                const reader = new FileReader();\n                reader.readAsDataURL(file.originFileObj);\n                reader.onload = () => resolve(reader.result);\n            });\n        }\n        const image = new Image();\n        image.src = src;\n        const imgWindow = window.open(src);\n        imgWindow?.document.write(image.outerHTML);\n    };\n    return (\n        <div>\n            {(postLogoLoading || editLogoLoading || putLogoLoading) ?\n                <AppLoader/> :\n                <Form\n                    form={form}\n                    name=\"basic\"\n                    labelCol={{\n                        span: 24\n                    }}\n                    wrapperCol={{\n                        span: 24\n                    }}\n                    style={{\n                        maxWidth: \"100%\"\n                    }}\n                    initialValues={initialValueForm}\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                    autoComplete=\"off\"\n                >\n\n\n                    <Row gutter={20}>\n                        <Form.Item\n                            label='Изображение логотип только в формате png 90x60'\n                            name={'logo'}\n                            rules={[{required: true, message: 'Требуется загрузка Изображение логотип'}]}>\n                            <ImgCrop rotationSlider>\n                                <Upload\n                                    maxCount={1}\n                                    fileList={fileListProps}\n                                    listType='picture-card'\n                                    onChange={onChange}\n                                    onPreview={onPreview}\n                                    beforeUpload={() => false}\n                                >\n                                    {fileListProps.length > 0 ? \"\" : \"Upload\"}\n                                </Upload>\n                            </ImgCrop>\n                        </Form.Item>\n                    </Row>\n\n                    <Button type=\"primary\" htmlType=\"submit\" style={{width: \"100%\", marginTop: \"20px\"}}>\n                        {\n                            editLogoSuccess ? 'Edit' : 'Add'\n                        }\n                    </Button>\n                </Form>\n            }\n        </div>\n    );\n};\n\nexport default LogoPostEdit;"],"names":["axios","concat","process","config","jwt","key","localStorage","getItem","error","console","log","authorization","headers","getData","url","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","sent","abrupt","stop","getDataByID","id","_callee2","_yield$axios$get2","_context2","postData","formData","_callee3","_yield$axios$post","_context3","editData","_callee4","_yield$axios$put","_context4","deleteData","_callee5","_context5","deleteImages","ids","_callee6","_context6","initialValueForm","logo","_Form$useForm","Form","form","_slicedToArray","navigate","useNavigate","editId","useSelector","state","dispatch","useDispatch","_useState","useState","_useState2","fileListProps","setFileListProps","_useMutation","useMutation","_ref","apiService","onSuccess","message","onError","obj","response","postLogoMutate","mutate","postLogo","postLogoLoading","isLoading","postLogoSuccess","isSuccess","_useQuery","useQuery","enabled","editLogoLoading","editLogoData","editLogoRefetch","refetch","editLogoSuccess","_useMutation2","_ref2","putLogo","putLogoLoading","putData","putLogoSuccess","useEffect","type","EDIT_DATA","payload","setFieldsValue","imageInitial","uid","name","status","edit","storedValues","JSON","parse","images","handleBeforeUnload","setItem","stringify","getFieldsValue","window","addEventListener","removeItem","removeEventListener","onPreview","_ref4","file","src","image","imgWindow","Promise","resolve","reader","FileReader","readAsDataURL","originFileObj","onload","result","Image","open","document","write","outerHTML","_x","apply","arguments","_jsx","children","AppLoader","_jsxs","labelCol","span","wrapperCol","style","maxWidth","initialValues","onFinish","_fileListProps$","_fileListProps$2","FormData","append","onFinishFailed","errorInfo","autoComplete","Row","gutter","label","rules","required","ImgCrop","rotationSlider","Upload","maxCount","fileList","listType","onChange","_ref3","newFileList","beforeUpload","length","Button","htmlType","width","marginTop"],"sourceRoot":""}