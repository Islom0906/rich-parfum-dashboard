{"version":3,"file":"static/js/570.370f48c2.chunk.js","mappings":"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","sources":["@crema/services/apis/axios.js","@crema/utility/helper/persistence-storage.js","@crema/services/apis/api.js","pages/sample/Partner/PartnerPostEdit.jsx","../node_modules/antd/es/col/index.js"],"sourcesContent":["import {getItem} from '../../utility/helper/persistence-storage';\nimport axios from 'axios';\n\naxios.defaults.baseURL = `${process.env.REACT_APP_API_URL}`;\n\naxios.interceptors.request.use((config) => {\n    const jwt = getItem('richtoken');\n    const authorization = jwt!==null ? `Bearer ${jwt}` : '';\n    config.headers.authorization = authorization;\n    return config;\n});\n\nexport default axios;","export const getItem=(key)=>{\n    try {\n        return localStorage.getItem(key)\n    } catch (error) {\n        console.log('Error getting data')\n    }\n}\n\nexport const setItem=(key,data)=>{\n    try {\n        localStorage.setItem(key,data)\n    } catch (error) {\n        console.log('Error saving data')\n    }\n}\nexport const removeItem=(key)=>{\n    try {\n        return localStorage.removeItem(key)\n    } catch (error) {\n        console.log('Error removing data')\n    }\n}","import axios from './axios';\n\nconst apiService = {\n    // malutmotlarni get qilish uchun url beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async getData(url) {\n        const {data} = await axios.get(url);\n        return data;\n    },\n    // faqat bitta malumot  get qilish uchun url va idsi beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async getDataByID(url, id) {\n        const {data} = await axios.get(`${url}/${id}`);\n        return data;\n    },\n    // malutmotni post qilish uchun url va yaratilgan malumot beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async postData(url, formData) {\n        const {data}= await axios.post(url, formData);\n        return data\n    },\n    // malutmotni edit qilish uchun url,id va yaratilgan malumot beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async editData(url, formData, id) {\n        const {data}= await axios.put(`${url}/${id}/`, formData)\n        return data\n    },\n    // malutmotni delete qilish uchun url va id  beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async deleteData(url, id) {\n        await axios.delete(`${url}/${id}`);\n    },\n\n    async deleteImages(url, ids) {\n        await axios.delete(url, {data:ids});\n    },\n};\nexport default apiService;","import React, {useEffect, useState} from 'react';\nimport {Button, Col, Form, Input, message, Row, Upload} from \"antd\";\nimport {useMutation, useQuery} from \"react-query\";\nimport apiService from \"../../../@crema/services/apis/api\";\nimport {AppLoader} from \"../../../@crema\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {EDIT_DATA} from \"../../../shared/constants/ActionTypes\";\nimport TextArea from \"antd/es/input/TextArea\";\nimport ImgCrop from \"antd-img-crop\";\n\n\nconst initialValueForm = {\n    full_name_uz: \"\",\n    full_name_ru: \"\",\n    job_uz: \"\",\n    job_ru: \"\",\n    text_uz: \"\",\n    text_ru: \"\",\n    image: \"\",\n    facebook: \"\",\n    instagram: \"\",\n    telegram: \"\",\n    youtube: \"\",\n\n};\n\n\nconst PartnerPostEdit = () => {\n\n    const [form] = Form.useForm();\n    const navigate = useNavigate()\n    const {editId} = useSelector(state => state.editData)\n    const dispatch = useDispatch()\n\n\n    const [fileListProps, setFileListProps] = useState([]);\n\n\n    // query-partner\n    const {\n        mutate: postPartnerMutate,\n        data: postPartner,\n        isLoading: postPartnerLoading,\n        isSuccess: postPartnerSuccess,\n    } = useMutation(({url, data}) => apiService.postData(url, data), {\n        onSuccess: () => {\n\n            message.success('Success')\n        },\n        onError: (error) => {\n            for (let obj in error.response.data) {\n                message.error(`${obj}: ${error.response.data[obj][0]}`)\n            }\n        }\n    });\n\n    // query-edit\n    const {\n        isLoading: editPartnerLoading,\n        data: editPartnerData,\n        refetch: editPartnerRefetch,\n        isSuccess: editPartnerSuccess,\n    } = useQuery([\"edit-partner\", editId], () => apiService.getDataByID(\"/about/partner\", editId), {\n        enabled: false\n    });\n    // put-query\n    const {\n        mutate: putPartner,\n        isLoading: putPartnerLoading,\n        data: putData,\n        isSuccess: putPartnerSuccess\n    } = useMutation(({\n                         url,\n                         data,\n                         id\n                     }) => apiService.editData(url, data, id), {\n        onSuccess: () => {\n            message.success('Success')\n        },\n        onError: (error) => {\n\n            for (let obj in error.response.data) {\n                message.error(`${obj}: ${error.response.data[obj][0]}`)\n            }\n\n        }\n    });\n\n    // partner success\n    useEffect(() => {\n        if (putPartnerSuccess) {\n            dispatch({type: EDIT_DATA, payload: \"\"})\n        }\n\n        if (postPartnerSuccess || putPartnerSuccess) {\n\n            navigate('/partner')\n        }\n    }, [postPartner, putData])\n\n\n\n\n    // if edit partner\n    useEffect(() => {\n        if (editId !== \"\") {\n            editPartnerRefetch();\n        }\n    }, [editId]);\n\n    // if no edit partner\n    useEffect(() => {\n        if (editId === \"\") {\n            form.setFieldsValue(initialValueForm)\n        }\n    }, []);\n\n\n    //edit partner\n    useEffect(() => {\n        if (editPartnerSuccess) {\n\n            const imageInitial = [\n                {\n                    uid: editPartnerData?.id,\n                    name: editPartnerData?.id,\n                    status: 'done',\n                    url: editPartnerData?.image,\n                },\n            ]\n            const edit = {\n                full_name_uz: editPartnerData.full_name_uz,\n                full_name_ru: editPartnerData.full_name_ru,\n                job_uz: editPartnerData.job_uz,\n                job_ru: editPartnerData.job_ru,\n                text_uz: editPartnerData.text_uz,\n                text_ru: editPartnerData.text_ru,\n                image: editPartnerData.image,\n                facebook: '',\n                instagram: '',\n                telegram: '',\n                youtube: ''\n            }\n\n            setFileListProps(imageInitial)\n            form.setFieldsValue(edit)\n        }\n\n    }, [editPartnerData])\n\n\n    const onFinish = (values) => {\n\n        const formData = new FormData();\n\n        formData.append('full_name_uz', values.full_name_uz);\n        formData.append('full_name_ru', values.full_name_ru);\n        formData.append('job_uz', '');\n        formData.append('job_ru', '');\n        formData.append('text_uz', values.text_uz);\n        formData.append('text_ru', values.text_ru);\n\n        if (fileListProps[0]?.originFileObj) {\n            formData.append('image', fileListProps[0]?.originFileObj);\n        }\n\n        formData.append('facebook', '');\n        formData.append('telegram', '');\n        formData.append('instagram', '');\n        formData.append('youtube', '');\n\n\n        if (editPartnerData) {\n            putPartner({url: '/about/partner', data: formData, id: editId})\n        } else {\n            postPartnerMutate({url: \"/about/partner/\", data: formData});\n        }\n\n\n    }\n    const onFinishFailed = (errorInfo) => {\n        console.log(\"Failed:\", errorInfo);\n    };\n\n\n    // refresh page again get data\n\n    useEffect(() => {\n        const storedValues = JSON.parse(localStorage.getItem('myFormValues'));\n        if (storedValues) {\n            storedValues.images = []\n            form.setFieldsValue(storedValues);\n        }\n\n        const handleBeforeUnload = () => {\n\n            localStorage.setItem(\n                'myFormValues',\n                JSON.stringify(form.getFieldsValue()),\n            );\n        };\n\n        window.addEventListener('beforeunload', handleBeforeUnload);\n\n        return () => {\n            localStorage.removeItem('editDataId')\n            localStorage.removeItem('myFormValues')\n            window.removeEventListener('beforeunload', handleBeforeUnload);\n        }\n    }, []);\n\n\n    // image\n    const onChange = ({fileList: newFileList}) => {\n        setFileListProps(newFileList);\n        form.setFieldsValue({image: newFileList});\n    };\n\n\n    const onPreview = async (file) => {\n        let src = file.url;\n        if (!src) {\n            src = await new Promise((resolve) => {\n                const reader = new FileReader();\n                reader.readAsDataURL(file.originFileObj);\n                reader.onload = () => resolve(reader.result);\n            });\n        }\n        const image = new Image();\n        image.src = src;\n        const imgWindow = window.open(src);\n        imgWindow?.document.write(image.outerHTML);\n    };\n    return (\n        <div>\n            {(postPartnerLoading || editPartnerLoading || putPartnerLoading) ?\n                <AppLoader/> :\n                <Form\n                    form={form}\n                    name=\"basic\"\n                    labelCol={{\n                        span: 24\n                    }}\n                    wrapperCol={{\n                        span: 24\n                    }}\n                    style={{\n                        maxWidth: \"100%\"\n                    }}\n                    initialValues={initialValueForm}\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                    autoComplete=\"off\"\n                >\n                    <Row gutter={20}>\n                        <Col span={12}>\n                            <Form.Item\n                                label=\"Full Name Uz\"\n                                name=\"full_name_uz\"\n                                rules={[{required: true, message: 'F.I.O ni kiritish talab qilinadi'}]}\n\n                            >\n                                <Input/>\n                            </Form.Item>\n\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                label=\"Полное имя Ru\"\n                                name=\"full_name_ru\"\n                                rules={[{required: true, message: 'Требуется Полное имя'}]}\n                            >\n                                <Input/>\n                            </Form.Item>\n\n                        </Col>\n\n                    </Row>\n                    {/*<Row gutter={20}>*/}\n                    {/*    <Col span={12}>*/}\n                    {/*        <Form.Item*/}\n                    {/*            label=\"Kasb\"*/}\n                    {/*            name=\"job_uz\"*/}\n                    {/*            rules={[{required: true, message: 'Kasb talab qilinadi'}]}*/}\n\n                    {/*        >*/}\n                    {/*            <Input/>*/}\n                    {/*        </Form.Item>*/}\n\n                    {/*    </Col>*/}\n                    {/*    <Col span={12}>*/}\n                    {/*        <Form.Item*/}\n                    {/*            label=\"Работа\"*/}\n                    {/*            name=\"job_ru\"*/}\n                    {/*            rules={[{required: true, message: 'Требуется Работа'}]}*/}\n                    {/*        >*/}\n                    {/*            <Input/>*/}\n                    {/*        </Form.Item>*/}\n\n                    {/*    </Col>*/}\n\n                    {/*</Row>*/}\n                    <Row gutter={20}>\n                        <Col span={12}>\n                            <Form.Item\n                                label=\"Fikr-mulohaza\"\n                                name=\"text_uz\"\n                                rules={[{required: true, message: 'Требуется Fikr-mulohaza'}]}\n\n                            >\n                                <TextArea rows={4}/>\n                            </Form.Item>\n\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                label=\"Обратная связь\"\n                                name=\"text_ru\"\n                                rules={[{required: true, message: 'Требуется Обратная связь'}]}\n                            >\n                                <TextArea rows={4}/>\n                            </Form.Item>\n\n                        </Col>\n\n                    </Row>\n                    <Row gutter={20}>\n                        <Form.Item\n                            label='Изображение Пользователь'\n                            name={'image'}\n                            rules={[{required: true, message: 'Требуется загрузка изображения Пользователь'}]}>\n                            <ImgCrop rotationSlider>\n                                <Upload\n                                    maxCount={1}\n                                    fileList={fileListProps}\n                                    listType='picture-card'\n                                    onChange={onChange}\n                                    onPreview={onPreview}\n                                    beforeUpload={() => false}\n                                >\n                                    {fileListProps.length > 0 ? \"\" : \"Upload\"}\n                                </Upload>\n                            </ImgCrop>\n                        </Form.Item>\n                    </Row>\n                    {/*<Title level={4}>Социальные сети пользователя</Title>*/}\n                    {/*<Row gutter={20}>*/}\n                    {/*    <Col span={12}>*/}\n                    {/*        <Form.Item*/}\n                    {/*            label=\"Facebook\"*/}\n                    {/*            name=\"facebook\"*/}\n                    {/*            rules={[{required: true, message: 'Требуется Facebook'}]}*/}\n\n                    {/*        >*/}\n                    {/*            <Input addonBefore={'https://'}/>*/}\n                    {/*        </Form.Item>*/}\n\n                    {/*    </Col>*/}\n                    {/*    <Col span={12}>*/}\n                    {/*        <Form.Item*/}\n                    {/*            label=\"Instagram\"*/}\n                    {/*            name=\"instagram\"*/}\n                    {/*            rules={[{required: true, message: 'Требуется Instagram'}]}*/}\n                    {/*        >*/}\n                    {/*            <Input addonBefore={'https://'}/>*/}\n                    {/*        </Form.Item>*/}\n\n                    {/*    </Col>*/}\n\n                    {/*</Row>*/}\n                    {/*<Row gutter={20}>*/}\n                    {/*    <Col span={12}>*/}\n                    {/*        <Form.Item*/}\n                    {/*            label=\"Telegram\"*/}\n                    {/*            name=\"telegram\"*/}\n                    {/*            rules={[{required: true, message: 'Требуется Telegram'}]}*/}\n                    {/*        >*/}\n                    {/*            <Input addonBefore={'https://'}/>*/}\n                    {/*        </Form.Item>*/}\n\n                    {/*    </Col>*/}\n                    {/*    <Col span={12}>*/}\n                    {/*        <Form.Item*/}\n                    {/*            label=\"Youtube\"*/}\n                    {/*            name=\"youtube\"*/}\n                    {/*            rules={[{required: true, message: 'Требуется Youtube'}]}*/}\n\n                    {/*        >*/}\n                    {/*            <Input addonBefore={'https://'}/>*/}\n                    {/*        </Form.Item>*/}\n\n                    {/*    </Col>*/}\n\n                    {/*</Row>*/}\n                    <Button type=\"primary\" htmlType=\"submit\" style={{width: \"100%\", marginTop: \"20px\"}}>\n                        {\n                            editPartnerSuccess ? 'Edit' : 'Add'\n                        }\n                    </Button>\n                </Form>\n            }\n        </div>\n    );\n};\n\nexport default PartnerPostEdit;","import { Col } from '../grid';\nexport default Col;"],"names":["axios","concat","process","config","jwt","key","localStorage","getItem","error","console","log","authorization","headers","getData","url","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","sent","abrupt","stop","getDataByID","id","_callee2","_yield$axios$get2","_context2","postData","formData","_callee3","_yield$axios$post","_context3","editData","_callee4","_yield$axios$put","_context4","deleteData","_callee5","_context5","deleteImages","ids","_callee6","_context6","initialValueForm","full_name_uz","full_name_ru","job_uz","job_ru","text_uz","text_ru","image","facebook","instagram","telegram","youtube","_Form$useForm","Form","form","_slicedToArray","navigate","useNavigate","editId","useSelector","state","dispatch","useDispatch","_useState","useState","_useState2","fileListProps","setFileListProps","_useMutation","useMutation","_ref","apiService","onSuccess","message","onError","obj","response","postPartnerMutate","mutate","postPartner","postPartnerLoading","isLoading","postPartnerSuccess","isSuccess","_useQuery","useQuery","enabled","editPartnerLoading","editPartnerData","editPartnerRefetch","refetch","editPartnerSuccess","_useMutation2","_ref2","putPartner","putPartnerLoading","putData","putPartnerSuccess","useEffect","type","EDIT_DATA","payload","setFieldsValue","imageInitial","uid","name","status","edit","storedValues","JSON","parse","images","handleBeforeUnload","setItem","stringify","getFieldsValue","window","addEventListener","removeItem","removeEventListener","onPreview","_ref4","file","src","imgWindow","Promise","resolve","reader","FileReader","readAsDataURL","originFileObj","onload","result","Image","open","document","write","outerHTML","_x","apply","arguments","_jsx","children","AppLoader","_jsxs","labelCol","span","wrapperCol","style","maxWidth","initialValues","onFinish","values","_fileListProps$","_fileListProps$2","FormData","append","onFinishFailed","errorInfo","autoComplete","Row","gutter","Col","label","rules","required","Input","TextArea","rows","ImgCrop","rotationSlider","Upload","maxCount","fileList","listType","onChange","_ref3","newFileList","beforeUpload","length","Button","htmlType","width","marginTop"],"sourceRoot":""}